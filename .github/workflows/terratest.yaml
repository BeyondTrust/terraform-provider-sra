name: Terraform E2E Test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  workflow_run:
    workflows: ["Dependabot PR Check"]
    types:
      - completed

permissions:
  contents: none

jobs:
  build_for_terratest:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch || '' }}

      - name: "Configure Go"
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          install-only: true

      - name: "Build"
        run: make testrelease

      - name: "Tar files"
        run: tar -cvf test-reg.tar ./test-reg

      - name: "Save build for testing"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-build
          path: ./test-reg.tar
          if-no-files-found: error

  terratest_pra:
    runs-on: ubuntu-latest
    needs: [build_for_terratest]
    environment:
      name: terratest-pra
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: "Configure Go"
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0

      - name: "Download test release"
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: test-build

      - name: "Untar files"
        run: tar -xvf test-reg.tar

      - name: "Setup Terraform"
        uses: autero1/action-terraform@43105c5ac1431a67287f012739dbbe6a163d6d95 # v3.0.1
        with:
          terraform-version: latest

      - name: "Run Tests"
        run: go test -v -timeout 10m $(go list ./... | grep /test | xargs)
        env:
          BT_API_HOST: ${{ secrets.BT_API_HOST }}
          BT_CLIENT_ID: ${{ secrets.BT_CLIENT_ID }}
          BT_CLIENT_SECRET: ${{ secrets.BT_CLIENT_SECRET }}

  terratest_rs:
    runs-on: ubuntu-latest
    needs: [build_for_terratest]
    environment:
      name: terratest-rs
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: "Configure Go"
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0

      - name: "Download test release"
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: test-build

      - name: "Untar files"
        run: tar -xvf test-reg.tar

      - name: "Setup Terraform"
        uses: autero1/action-terraform@43105c5ac1431a67287f012739dbbe6a163d6d95 # v3.0.1
        with:
          terraform-version: latest
      - name: "Run Tests"
        run: go test -v -timeout 10m $(go list ./... | grep /test | xargs)
        env:
          BT_API_HOST: ${{ secrets.BT_API_HOST }}
          BT_CLIENT_ID: ${{ secrets.BT_CLIENT_ID }}
          BT_CLIENT_SECRET: ${{ secrets.BT_CLIENT_SECRET }}
