name: Terraform E2E Test

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  workflow_run:
    workflows: ["Dependabot PR Check"]
    types:
      - completed

permissions:
  contents: none

jobs:
  build_for_terratest:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || (github.event_name == 'pull_request' && github.actor != 'dependabot[bot]') || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch || '' }}

      - name: "Configure Go"
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0

      - name: Install GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          install-only: true

      - name: "Build"
        run: make testrelease

      - name: "Tar files"
        run: tar -cvf test-reg.tar ./test-reg

      - name: "Save build for testing"
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-build
          path: ./test-reg.tar
          if-no-files-found: error

  terratest_pra:
    runs-on: ubuntu-latest
    needs: [build_for_terratest]
    environment:
      name: terratest-pra
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Configure Go"
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0

      - name: "Download test release"
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: test-build

      - name: "Untar files"
        run: tar -xvf test-reg.tar

      - name: "Setup Terraform"
        uses: autero1/action-terraform@43105c5ac1431a67287f012739dbbe6a163d6d95 # v3.0.1
        with:
          terraform-version: latest

      - name: "Run Tests"
        run: go test -v -timeout 10m $(go list ./... | grep /test | xargs)
        env:
          BT_API_HOST: ${{ secrets.BT_API_HOST }}
          BT_CLIENT_ID: ${{ secrets.BT_CLIENT_ID }}
          BT_CLIENT_SECRET: ${{ secrets.BT_CLIENT_SECRET }}

  terratest_rs:
    runs-on: ubuntu-latest
    needs: [build_for_terratest]
    environment:
      name: terratest-rs
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: "Configure Go"
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0

      - name: "Download test release"
        uses: actions/download-artifact@cc203385981b70ca67e1cc392babf9cc229d5806 # v4.1.9
        with:
          name: test-build

      - name: "Untar files"
        run: tar -xvf test-reg.tar

      - name: "Setup Terraform"
        uses: autero1/action-terraform@43105c5ac1431a67287f012739dbbe6a163d6d95 # v3.0.1
        with:
          terraform-version: latest
      - name: "Run Tests"
        run: go test -v -timeout 10m $(go list ./... | grep /test | xargs)
        env:
          BT_API_HOST: ${{ secrets.BT_API_HOST }}
          BT_CLIENT_ID: ${{ secrets.BT_CLIENT_ID }}
          BT_CLIENT_SECRET: ${{ secrets.BT_CLIENT_SECRET }}
