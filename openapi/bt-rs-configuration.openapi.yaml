openapi: 3.0.0
info:
  version: "1.8"
  title: "BeyondTrust Remote Support Configuration APIs"
  description: >
    <a id="__overview"></a>

    ## Overview

    The BeyondTrust Remote Support Configuration APIs provide a way to programmatically configure BeyondTrust Remote Support.

    <a id="__overview_authentication"></a>

    ### Authentication

    The BeyondTrust Remote Support Configuration APIs require [OAuth 2 credentials for authentication](https://www.beyondtrust.com/docs/remote-support/how-to/integrations/api/authentication.htm).

    <a id="__overview_request_headers"></a>

    ### Required Request Headers

    In addition to the [Authorization header used for OAuth 2 authentication](https://www.beyondtrust.com/docs/remote-support/how-to/integrations/api/authentication.htm),

      - for `GET` and `DELETE` requests, you must include an `Accept` header with the value `application/json`.
      - for all other requests where you are sending a JSON request body, you must include a `Content-Type` header with a value of `application/json`.

    <a id="__overview_http_methods"></a>


    ### HTTP Request Methods

    The documentation below lists the allowed [HTTP request methods](https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods) for each API. Not all methods are allowed for all APIs.


    All APIs that document `GET` requests will also accept `HEAD` requests. Responses to `HEAD` requests never include a body. This might be useful if you only wish to use the HTTP status code and/or pagination headers to determine the existence of a resource or resources identified by the URI, and you do not need the response body.


    In addition to the human-readable documentation for each API below, the `OPTIONS` method may be used with any URI to obtain the list of allowed HTTP methods for a given URI. For example, the request

        OPTIONS https://example.beyondtrust.com/api/config/v1/user

    will respond with an `Allow` header containing a comma-separated list of the HTTP methods that can be used with that URI:

        Allow: GET,HEAD,POST


    If you attempt to use an HTTP method with an API that does not support that method, you will receive an HTTP 405 "Method Not Allowed" response.

    <a id="__overview_status_codes"></a>

    ### Common HTTP Status Codes

    Individual APIs may provide specific documentation for certain status codes, but not all possible status codes are documented on every API. The following is a list of the HTTP status codes commonly returned by these APIs and what they usually mean.

    <table>
    <tr>
    <th>Status Code</th>
    <th>Description</th>
    </tr>
    <tr>
    <td>200</td>
    <td> For a GET query, this indicates the query was successful, though the response may or
    may not include an empty resource array depending on whether your query parameters
    matched any resources. For a PATCH request, this indicates the resource was updated
    successfully, and the response should contain the updated resource object.
    </td>
    </tr>
    <tr>
    <td>201</td>
    <td>The operation successfully created a new resource.</td>
    </tr>
    <tr>
    <td>
    204
    </td>
    <td>Indicates an operation—such as a DELETE—completed successfully. The response body should be
    empty.
    </td>
    </tr>
    <tr>
    <td>401</td>
    <td>For a GET operation, this indicates you supplied unrecognized query string parameters;
    for a POST or PATCH operation, this indicates you supplied unrecognized fields in the
    request body. Check the documentation to ensure all parameters are spelled correctly.
    </td>
    </tr>
    <tr>
    <td>403</td>
    <td>The API Account whose authentication credentials were used for the request does not
    have permission to use this API. Edit this account on the <a target="_blank" href="https://example.beyondtrust.com/login/api_account">API Account</a> page and
    ensure it has permission to use the Configuration API.
    </td>
    </tr>
    <tr>
    <td>404</td>
    <td>A request for a specific resource - usually by id - did not match any known
    resources.
    </td>
    </tr>
    <tr>
    <td>405</td>
    <td>Your request contained an <a rel="noopener" target="_blank" href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods">HTTP method</a> that is not supported for the URI of the request. The documentation below indicates which methods are allowed for each API endpoint. Methods that are not specifically documented are not allowed, except for HEAD and OPTIONS as mentioned in the <a href="#__overview_http_methods">HTTP Request Methods</a> section above.
    </td>
    </tr>
    <tr>
    <td>422</td>
    <td>This can happen when attempting to create or update a resource with malformed data. The
    response body should contain a validation error dictionary indicating which fields are
    invalid and how they are invalid.
    </td>
    </tr>
    <tr>
    <td>500</td>
    <td>An internal server error occurred. Please contact BeyondTrust support.</td>
    </tr>
    </tr>
    </table>

    <a id="__overview_pagination"></a>


    ### Pagination

    All GET API endpoints that return multiple resources - e.g. `GET https://example.beyondtrust.com/api/config/v1/user` - return paginated responses of no more than 100 items by default. This means a single response may or may not include all of the requested resources and you may need to make additional requests to obtain the remaining resources.

    ### Query String Parameters

    There are two query string parameters you should always supply when accessing a paginated API:

    - `per_page`: This indicates the number of resources you wish to obtain in each response. It defaults to 100 if not supplied, which is also the maximum value.

    - `current_page`: This indicates the 1-based index of the set of `per_page` resources you wish to obtain.


    There are several response headers you can use to programmatically navigate through all the pages of a given resource.

    ### `Link` Header

    The [Link header](http://tools.ietf.org/html/rfc5988) includes the URLs of at least the first and last page of the paginated API endpoint based on your `per_page` and `current_page` query string parameters. The header may also contain URLs for the previous and next pages, depending on your pagination query string parameters and how many resources exist in the system. An example `Link` header for a request to

        https://example.beyondtrust.com/api/config/v1/user?per_page=10&current_page=2

      would look something like the following:


        Link: <https://example.beyondtrust.com/api/config/v1/user?per_page=10&current_page=1>; rel="first",
        <https://example.beyondtrust.com/api/config/v1/user?per_page=10&current_page=1>; rel="previous",
        <https://example.beyondtrust.com/api/config/v1/user?per_page=10&current_page=3>; rel="next",
        <https://example.beyondtrust.com/api/config/v1/user?per_page=10&current_page=5>; rel="last"


    *Newlines are included for readability. They would not be included in an actual `Link` header.*


    The sections of a `Link` header are comma-space-delimited. The URLs are surrounded in `<>`.


    The `rel` values indicate the name of the page identified by the preceding URL. Possible values are "first", "previous", "next", and "last". "first" and "last" URLs will always be included, even if they are the same. "previous" and "next" URLs will only be included when those pages exist.


    ### `X-BT-Pagination` Headers


    Using the URLs in the `Link` header is the least error-prone way to paginate. Building your URLs programmatically is not recommended. However there are additional headers that provide access to some page numbers and resource counts that you may find useful.

    - `X-BT-Pagination-Current-Page`: Contains the 1-based index of the current page. This should match your `current_page` query string parameter, if provided.

    - `X-BT-Pagination-Last-Page`: Contains the 1-based index of the last page.

    - `X-BT-Pagination-Per-Page`: Contains the 1-based index of the current page. This should match your `per_page` query string parameter, if provided.

    - `X-BT-Pagination-Total`: Contains the total number of resources that match your query across all pages.

    <a id="__overview_date_times"></a>


    ### Date-Time Formatting and Time Zones

    All date-time values should be in [RFC3339 Internet Date-Time Format](https://tools.ietf.org/html/rfc3339#section-5.6) in UTC unless otherwise noted.

    When submitting date-time values to these APIs, milliseconds are optional and will be ignored. A UTC timezone must be included to avoid ambiguity, represented with either the "Z" suffix or a "+00:00" offset suffix.

    #### Valid Examples

    - `2025-10-16T14:46:25.930+00:00`

    - `2026-10-16T14:46:23+00:00`

    - `2025-10-16T14:46:25.930Z`

    - `2026-10-16T14:46:23Z`


    #### Invalid Examples

    - **INVALID** `2025-10-16T14:46:25.930`: Missing timezone; not a valid RFC3339 string.

    - **INVALID** `2026-10-16T14:46:23`: Missing timezone; not a valid RFC3339 string.

    - **INVALID** `2025-10-16T14:46:25.930-08:00`: Non-UTC timezone; valid RFC3339 string but not allowed by these APIs.

    - **INVALID** `2026-10-16T14:46:23+04:00`: Non-UTC timezone; valid RFC3339 string but not allowed by these APIs.


    Date-time strings in responses will always include a "+00:00" timezone offset suffix - never a "Z" suffix.

    <a id="__overview_integers"></a>


    ### Integers

    Request body parameters that are marked as type "integer" must be supplied as actual JSON numbers, not strings containing a number. For example, if the documentation indicates a request body field named `team_id` is an integer, then the object `{ team_id: 42 }` would be valid, but the object `{ team_id: "42" }` would be invalid.

  contact:
    email: support@BeyondTrust.com
externalDocs:
  description: Find out more about BeyondTrust Remote Access APIs
  url: https://www.beyondtrust.com/docs/remote-support/how-to/integrations/api/
servers:
  - url: https://example.beyondtrust.com/api/config/v1
paths:
  /jump-client:
    get:
      summary: Get all Jump Clients matching query parameters.
      description: Gets a paginated list of Jump Clients owned by shared Jump Groups.
      operationId: api.config.jump-client.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters Jump Clients by the given name.
          schema:
            type: string
            maxLength: 128
            minLength: 1
        - in: query
          name: hostname
          description: Filters Jump Clients by the given hostname (computer name).
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - in: query
          name: fqdn
          description: Filters Jump Clients by the given fully qualified domain name.
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - in: query
          name: tag
          description: Filters Jump Clients by the given tag.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - in: query
          name: jump_group_id
          description: Filters Jump Clients by the given jump group id.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - in: query
          name: jump_group_type
          description: Filters Jump Clients by the given jump group type.
          schema:
            type: string
            enum: [shared, personal]
        - in: query
          name: console_user
          description: Filters Jump Clients by the given console user.
          schema:
            type: string
            minimum: 1
        - in: query
          name: public_ip
          description: Filters Jump Clients by the given public IP address.
          schema:
            type: string
            minLength: 1
        - in: query
          name: private_ip
          description: Filters Jump Clients by the given private IP address.
          schema:
            type: string
            minLength: 1
        - in: query
          name: connection_type
          description: Filters Jump Clients by the given connection type.
          schema:
            type: string
            enum: [active, passive, uninstalled]
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JumpClient"

  /jump-client/{id}:
    get:
      summary: Get a Jump Client.
      description: Gets the Jump Client resource with the given `{id}`.
      operationId: api.config.jump-client.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpClient"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Jump Client resource.
      description: Modifies an existing Jump Client resource with the given `{id}` using the given properties.
      operationId: api.config.jump-client.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: A Jump Client resource with modified properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpClient"
        required: true
      responses:
        "200":
          description: Indicates the existing Jump Client was successfully updated and returns the Jump Client.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpClient"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Jump Client resource.
      description: Deletes the existing Jump Client resource with the given `{id}`.
      operationId: api.config.jump-client.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the Jump Client was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jump-client/{id}/copy:
    post:
      summary: Copy a Jump Client.
      description: Copies a Jump Client.
      operationId: api.config.jump-client.copy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpItem"
      responses:
        "200":
          description: Indicates the Jump Client was successfully copied.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyJumpItemResponse"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jump-client/installer:
    get:
      summary: Get all Jump Client installers matching query parameters.
      description: Gets a paginated list of Jump Client installers.
      operationId: api.config.jump-client.installer.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters Jump Client installers by the given name.
          schema:
            type: string
            maxLength: 128
            minLength: 1
        - in: query
          name: hostname
          description: Filters Jump Client installers by the given hostname (computer name).
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - in: query
          name: fqdn
          description: Filters Jump Client installers by the given fully qualified domain name.
          schema:
            type: string
            minLength: 1
            maxLength: 255
        - in: query
          name: tag
          description: Filters Jump Client installers by the given tag.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - in: query
          name: jump_group_id
          description: Filters Jump Client installers by the given jump group id.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - in: query
          name: jump_group_type
          description: Filters Jump Client installers by the given jump group type.
          schema:
            type: string
            enum: [shared, personal]
        - in: query
          name: connection_type
          description: Filters Jump Client installers by the given connection type.
          schema:
            type: string
            enum: [active, passive]
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JumpClientInstaller"

    post:
      summary: Create a Jump Client installer
      description: The response body returns a unique installer identifier that can be used to download the installer for a specific platform, and the key information needed to deploy a Windows MSI installer.
      operationId: api.config.jump-client.create-installer
      requestBody:
        description: New Jump Client properties.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 0
                  maxLength: 128
                  description: The name for the Jump Clients deployed using this installer. If left blank, the Jump Client name will be set to the name of the computer on which the installer is deployed.
                jump_group_id:
                  type: integer
                  minimum: 1
                  maximum: 2147483647
                  description: The shared Jump Group that will own the Jump Clients deployed using this installer.
                jump_group_type:
                  type: string
                  description: The type of Jump Group that owns this Jump Clients.
                  default: shared
                  enum: [shared, personal]
                jump_policy_id:
                  type: integer
                  minimum: 1
                  maximum: 2147483647
                  description: The unique identifier of the Jump Policy used to manage access to the Jump Client.
                tag:
                  type: string
                  minLength: 0
                  maxLength: 64
                  description: The tag for the Jump Clients deployed using this installer.
                connection_type:
                  type: string
                  default: "active"
                  description: The type of Jump Client to deploy. Cloud deployments only allow active installers.
                  enum:
                    - active
                    - passive
                attended_session_policy_id:
                  type: integer
                  nullable: true
                  minimum: 2
                  maximum: 2147483647
                  description: The session policy used when an end user is present on the Jump Client system.
                unattended_session_policy_id:
                  type: integer
                  nullable: true
                  minimum: 2
                  maximum: 2147483647
                  description: The session policy used when an end user is not present on the Jump Client system.
                comments:
                  type: string
                  minLength: 0
                  maxLength: 1024
                  default: ""
                  description: The comments for the Jump Clients deployed using this installer.
                valid_duration:
                  type: integer
                  minimum: 10
                  maximum: 525600
                  default: 1440
                  description: The number of minutes that the installer will be valid after it is downloaded. When the installer expires it can no longer be used to deploy new jump clients.
                elevate_install:
                  type: boolean
                  default: true
                  description: If true, the installer will attempt to elevate the Jump Client to make it run as a service.
                elevate_prompt:
                  type: boolean
                  default: true
                  description: If true, the installer will prompt for elevation credentials if necessary. This parameter is ignored if elevate_install is false.
                customer_client_start_mode:
                  type: string
                  enum: [normal, minimized, hidden]
                  default: "normal"
                  description: This setting determines how sessions are started from the deployed Jump Client. If normal, the customer client will start with the window visible. If minimized, it will start with the window minimized. If hidden, it will start with no visible customer window and will not appear in the taskbar.
                allow_override_jump_group:
                  type: boolean
                  default: false
                  description: If true, the jump group can be specified during installation, which will override the jump group id specified in this API call.
                allow_override_jump_policy:
                  type: boolean
                  default: false
                  description: If true, the jump policy can be specified during installation, which will override the jump policy id specified in this API call.
                allow_override_name:
                  type: boolean
                  default: false
                  description: If true, the name can be specified during installation, which will override the name specified in this API call.
                allow_override_tag:
                  type: boolean
                  default: false
                  description: If true, the tag can be specified during installation, which will override the tag specified in this API call.
                allow_override_comments:
                  type: boolean
                  default: false
                  description: If true, the comments can be specified during installation, which will override the comments specified in this API call.
                allow_override_attended_session_policy:
                  type: boolean
                  default: false
                  description: If true, the attended session policy can be specified during installation, which will override the value specified in this API call.
                allow_override_unattended_session_policy:
                  type: boolean
                  default: false
                  description: If true, the unattended session policy can be specified during installation, which will override the value specified in this API call.
              required:
                - jump_group_id
        required: true
      responses:
        "201":
          description: Indicates the Jump Client installer was created successfully and contains the installer identifier and key information.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpClientInstaller"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-client/installer/{id}:
    get:
      summary: Get a Jump Client installer's information.
      description: Gets the Jump Client installer resource with the given `{id}`.
      operationId: api.config.jump-client.installer.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpClientInstaller"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Jump Client installer resource.
      description: Deletes the existing Jump Client installer resource with the given `{id}`.
      operationId: api.config.jump-client.installer.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the Jump Client installer was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jump-client/installer/{installer_id}/{platform}:
    get:
      summary: Get the mass deployment installer for the given platform.
      description: Gets the mass deployment installer for the given platform.
      operationId: api.config.jump-client.download
      parameters:
        - in: path
          required: true
          name: installer_id
          description: The unique installer identifier.
          schema:
            type: string
            minLength: 32
            maxLength: 32
        - in: path
          required: true
          name: platform
          description: "The platform for the mass deployment installer."
          schema:
            type: string
            enum: [linux-64, linux-64-headless, raspberry-pi-32-headless, mac-dmg, mac-zip, windows-64, windows-64-msi, windows-32, windows-32-msi]
      responses:
        "200":
          description: OK
          content:
            application/x-executable:
              schema:
                type: string
                format: binary

  /jump-item-role:
    get:
      summary: Get all Jump Item Roles matching query parameters.
      description: Gets a paginated list of Jump Item Roles.
      operationId: api.config.jump-item-role.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include the Jump Item Role that matches the name in the query.
          schema:
            type: string
            maxLength: 255
            minLength: 1
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JumpItemRole"
  /jump-item-role/{id}:
    get:
      summary: Get a Jump Item Role.
      description: Gets the Jump Item Role resource with the given `{id}`.
      operationId: api.config.jump-item-role.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpItemRole"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jump-item/remote-rdp:
    get:
      summary: Get all Remote RDP Jump Items matching query parameters.
      description: Gets a paginated list of Remote RDP Jump Items. This API is needed so that the synchronization integration can efficiently know which Remote RDP Jump Items already exist in the system.
      operationId: api.config.jump-item.remote-rdp.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only remote rdp items with the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - in: query
          name: hostname
          description: Filters results to include only the remote rdp items with the given hostname.
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - in: query
          name: jump_group_id
          description: Filters results to include only the remote rdp items with the given jump_group_id.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - in: query
          name: jump_group_type
          description: Filters results to include only the remote rdp items with the given Jump Group type.
          schema:
            type: string
            enum: [shared, personal]
        - in: query
          name: jumpoint_id
          description: Filters results to include only the remote rdp items with the given Jumpoint id.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - in: query
          name: endpoint_id
          description: Filters results to include only the remote rdp with the given endpoint_id.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - in: query
          name: tag
          description: Filters results to include only the remote rdp items with the given tag.
          schema:
            type: string
            minLength: 1
            maxLength: 64
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RemoteRdpJumpItem"
    post:
      summary: Create a Remote RDP Jump Item.
      description: >
        Adds a new Remote RDP Jump Item resource.

        The response body contains the new Remote RDP Jump Item.

      operationId: api.config.jump-item.remote-rdp.store
      requestBody:
        description: New Remote RDP Jump Item properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteRdpJumpItem"
        required: true
      responses:
        "201":
          description: Indicates the Remote RDP Jump Item was created successfully and contains the new Remote RDP Jump Item instance. The `Location` header contains the URL of the Remote RDP Jump Item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteRdpJumpItem"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/remote-rdp/{id}:
    get:
      summary: Get a Remote RDP Jump Item.
      description: Gets the Remote RDP Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.remote-rdp.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteRdpJumpItem"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Remote RDP Jump Item resource.
      description: Modifies an existing Remote RDP Jump Item resource with the given `{id}` using the given properties.
      operationId: api.config.jump-item.remote-rdp.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: A Remote RDP Jump Item resource with modified properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteRdpJumpItem"
        required: true
      responses:
        "200":
          description: Indicates the existing Remote RDP Jump Item was successfully updated and returns the updated Remote RDP Jump Item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteRdpJumpItem"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Remote RDP Jump Item resource.
      description: Deletes the existing Remote RDP Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.remote-rdp.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the Remote RDP Jump Item was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/remote-rdp/{id}/copy:
    post:
      summary: Copy a Remote RDP Jump Item.
      description: Copies the Remote RDP Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.remote-rdp.copy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpItem"
      responses:
        "200":
          description: Indicates the Remote RDP Item was successfully copied.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyJumpItemResponse"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/shell-jump:
    get:
      summary: Get all shell jump items matching query parameters.
      description: Gets a paginated list of Shell Jump Items. This API is needed so that the synchronization integration can efficiently know which Shell Jump Items already exist in the system.
      operationId: api.config.jump-item.shell-jump.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only shell jump items with the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - in: query
          name: hostname
          description: Filters results to include only the shell jump items with the given hostname.
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - in: query
          name: jump_group_id
          description: Filters results to include only the shell jump items with the given Jump Group id.
          schema:
            type: integer
            format: int32
            minimum: 1
        - in: query
          name: jump_group_type
          description: Filters results to include only the shell jump items with the given Jump Group type.
          schema:
            type: string
            enum: [shared, personal]
        - in: query
          name: jumpoint_id
          description: Filters results to include only the shell jump items with the given Jumpoint id.
          schema:
            type: integer
            format: int32
            minimum: 1
        - in: query
          name: tag
          description: Filters results to include only the shell jump items with the given tag.
          schema:
            type: string
            minLength: 1
            maxLength: 64
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ShellJumpItem"
    post:
      summary: Adds a new Shell Jump Item.
      description: Creates a new Shell Jump Item with the properties given in the request body.
      operationId: api.config.jump-item.shell-jump.store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShellJumpItem"
      responses:
        "201":
          description: Indicates the Shell Jump Item was created successfully and contains the new instance. The `Location` header contains the URL of the item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShellJumpItem"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/shell-jump/{id}:
    get:
      summary: Get a Shell Jump Item.
      description: Gets the Shell Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.shell-jump.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: The requested ShellJumpItem instance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShellJumpItem"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Shell Jump Item.
      description: Modifies the existing Shell Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.shell-jump.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: A Shell Jump Item object with modified properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShellJumpItem"
        required: true
      responses:
        "200":
          description: Indicates the Shell Jump Item was successfully updated and contains an updated Shell Jump Item instance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShellJumpItem"
    delete:
      summary: Delete a Shell Jump Item resource.
      description: Deletes an existing Shell Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.shell-jump.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the Shell Jump Item was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/shell-jump/{id}/copy:
    post:
      summary: Copy a Shell Jump Item.
      description: Copies the Shell Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.shell-jump.copy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpItem"
      responses:
        "200":
          description: Indicates the Shell Jump Item was successfully copied.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyJumpItemResponse"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/remote-vnc:
    get:
      summary: Get all Remote VNC Jump Items matching query parameters.
      description: Gets a paginated list of Remote VNC Jump Items. This API is needed so that integrations can efficiently know which Remote VNC Jump Items already exist in an SRA site.
      operationId: api.config.jump-item.remote-vnc.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only remote vnc items with the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - in: query
          name: hostname
          description: Filters results to include only the remote vnc items with the given hostname.
          schema:
            type: string
            minLength: 3
            maxLength: 255
        - in: query
          name: jump_group_id
          description: Filters results to include only the remote vnc items with the given jump_group_id.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - in: query
          name: jump_group_type
          description: Filters results to include only the remote vnc items with the given Jump Group type.
          schema:
            type: string
            enum: [shared, personal]
        - in: query
          name: jumpoint_id
          description: Filters results to include only the remote vnc items with the given Jumpoint id.
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 2147483647
        - in: query
          name: tag
          description: Filters results to include only the remote vnc items with the given tag.
          schema:
            type: string
            minLength: 1
            maxLength: 64
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RemoteVncJumpItem"
    post:
      summary: Create a Remote VNC Jump Item.
      description: >
        Adds a new Remote VNC Jump Item resource.

        The response body contains the new Remote VNC Jump Item.

      operationId: api.config.jump-item.remote-vnc.store
      requestBody:
        description: New Remote VNC Jump Item properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteVncJumpItem"
        required: true
      responses:
        "201":
          description: Indicates the Remote VNC Jump Item was created successfully and contains the new Remote VNC Jump Item instance. The `Location` header contains the URL of the Remote VNC Jump Item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteVncJumpItem"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/remote-vnc/{id}:
    get:
      summary: Get a Remote VNC Jump Item.
      description: Gets the Remote VNC Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.remote-vnc.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteVncJumpItem"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Remote VNC Jump Item resource.
      description: Modifies an existing Remote VNC Jump Item resource with the given `{id}` using the given properties.
      operationId: api.config.jump-item.remote-vnc.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: A Remote VNC Jump Item resource with modified properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RemoteVncJumpItem"
        required: true
      responses:
        "200":
          description: Indicates the existing Remote VNC Jump Item was successfully updated and returns the updated Remote VNC Jump Item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteVncJumpItem"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Remote VNC Jump Item resource.
      description: Deletes the existing Remote VNC Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.remote-vnc.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the Remote VNC Jump Item was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-item/remote-vnc/{id}/copy:
    post:
      summary: Copy a Remote VNC Jump Item.
      description: Copies the Remote VNC Jump Item resource with the given `{id}`.
      operationId: api.config.jump-item.remote-vnc.copy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpItem"
      responses:
        "200":
          description: Indicates the Remote VNC Jump Item was successfully copied.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CopyJumpItemResponse"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-group:
    get:
      summary: Get all Jump Group resources matching query parameters.
      description: |
        Gets a paginated list of Jump Groups.

        They can optionally be filtered using query string parameters documented below. If more than one filter is specified, then AND logic is used to combine the criteria. If no filter criteria are specified, then all Jump Groups are returned. String parameters are always matched case-insensitively and exactly; no partial matches are allowed.
      operationId: api.config.jump-group.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only the Jump Group with the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - $ref: "#/components/parameters/CodeNameParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JumpGroup"
    post:
      summary: Adds a new Jump Group.
      description: Creates a new Jump Group with the properties given in the request body.
      operationId: api.config.jump-group.store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpGroup"
      responses:
        "201":
          description: Indicates the Jump Group was created successfully and contains the new instance. The `Location` header contains the URL of the new group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpGroup"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-group/{id}:
    get:
      summary: Get a Jump Group.
      description: Gets the Jump Group resource with the given `{id}`.
      operationId: api.config.jump-group.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Jump Group resource.
      description: Modifies an existing Jump Group resource with the given `{id}` using the given properties.
      operationId: api.config.jump-group.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The Jump Group properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpGroup"
        required: true
      responses:
        "200":
          description: Indicates the existing Jump Group was successfully updated and returns the new Jump Group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Jump Group.
      description: Deletes an existing Jump Group resource with the given `{id}`. Note that all resources owned by this Jump Group, such as Jump Items, will also be deleted.
      operationId: api.config.jump-group.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the Jump Group was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-group/{id}/user:
    get:
      summary: Get a list of Users in a Jump Group.
      description: Gets a paginated list of `JumpGroupUser` resources representing users explicitly granted access to the Jump Group with the given `{id}`. This list does not include users implicitly granted access via a group policy or the "Administrator" user permission.
      operationId: api.config.jump-group.user.index
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JumpGroupUser"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    post:
      summary: Add a User to a Jump Group.
      description: Adds a user with the `user_id` given in the request body to the Jump Group with the given `{id}`. Only the `user_id` field is required in the body. The `jump_item_role_id` defaults to `null`, which means the system will use the user's Default Jump Item Role at the time of a jump.
      operationId: api.config.jump-group.user.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpGroupUser"
      responses:
        "201":
          description: Indicates the user was created successfully added to the Jump Group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpGroupUser"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-group/{id}/user/{user_id}:
    patch:
      summary: Change a User's role in a Jump Group.
      description: Modifies the existing Jump Item Role of the user with the given `{user_id}` in the Jump Group with the given `{id}`.
      operationId: api.config.jump-group.user.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      requestBody:
        description: The properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpGroupUser"
        required: true
      responses:
        "200":
          description: Indicates the update was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpGroupUser"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Remove a User from a Jump Group.
      description: Removes the user with the given `{user_id}` from the Jump Group with the given `{id}`.
      operationId: api.config.jump-group.user.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      responses:
        "204":
          description: Indicates the user was successfully removed.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    get:
      summary: Get a User in a Jump Group.
      description: Returns a `JumpGroupUser` resource representing a user with the given `{user_id}` in the Jump Group with the given `{id}`. This is useful for determining the Jump Item Role of the user in the Jump Group.
      operationId: api.config.jump-group.user.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: A `JumpGroupUser` resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpGroupUser"

  /jumpoint:
    get:
      summary: Get all Jumpoints.
      description: |
        Gets a paginated list of Jumpoints.

        They can optionally be filtered using query string parameters documented below. If no filter criteria are specified then all Jumpoints are returned. If more than one criteria is specified then AND logic is used to combine the criteria. String parameters are always matched case-insensitively and exactly. No partial matches are allowed.

        If a clustered Jumpoint has multiple nodes then all nodes are searched for matching criteria. Node resources are not returned in the response.
      operationId: api.config.jumpoint.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only Jumpoints with the given name.
          schema:
            type: string
        - in: query
          name: public_ip
          description: Filters results to include only Jumpoints with a node that has the specified public IP.
          schema:
            type: string
        - in: query
          name: private_ip
          description: Filters results to include only Jumpoints with a node that has the specified private IP.
          schema:
            type: string
        - in: query
          name: hostname
          description: Filters results to include only Jumpoints with a node that has the specified hostname.
          schema:
            type: string
        - $ref: "#/components/parameters/CodeNameParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Jumpoint"
    post:
      summary: Adds a new Jumpoint.
      description: Creates a new Jumpoint with the properties given in the request body.
      operationId: api.config.jumpoint.store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jumpoint"
      responses:
        "201":
          description: Indicates the Jumpoint was created successfully and contains the new instance. The `Location` header contains the URL of the new Jumpoint.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jumpoint"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jumpoint/{id}:
    get:
      summary: Get a jumpoint.
      description: Gets the Jumpoint resource with the given `{id}`.
      operationId: api.config.jumpoint.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jumpoint"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Jumpoint resource.
      description: Modifies an existing Jumpoint resource with the given `{id}` using the given properties. The clustered attribute cannot be modified with this API.
      operationId: api.config.jumpoint.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The Jumpoint properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Jumpoint"
        required: true
      responses:
        "200":
          description: Indicates the existing Jumpoint was successfully updated and returns the id of the new Jumpoint.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Jumpoint"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Jumpoint resource.
      description: Deletes the existing Jumpoint resource with the given `{id}`. Deleting a Jumpoint also deletes all Jumpoint nodes and Jump Items owned by the Jumpoint. It will also delete all endpoints, discovery jobs, local accounts, domain accounts, and domains that use the Jumpoint.
      operationId: api.config.jumpoint.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the user was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jumpoint/{id}/installer:
    get:
      summary: Get the 64-bit installer for a Jumpoint resource.
      description: For non-clustered Jumpoints, this API returns an error if a node is currently associated with the given Jumpoint. If a non-clustered Jumpoint already has a node then that node must be deleted before calling this API. For clustered Jumpoints, only 10 nodes can be installed. If this API is called when a clustered Jumpoint already has 10 nodes then an error is returned.
      operationId: api.config.jumpoint.download
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/x-executable:
              schema:
                type: string
                format: binary
  /jumpoint/{id}/node:
    get:
      summary: Returns the nodes for the Jumpoint with the given `{id}`.
      description: Returns the nodes for the Jumpoint with the given `{id}`. This API is not paginated because clustered Jumpoints can have a maximum of 10 nodes.
      operationId: api.config.jumpoint.node.index
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpointNode"
        "404":
          $ref: "#/components/responses/404NotFound"

  /jumpoint/{id}/user:
    get:
      summary: Get a list of Users allowed to access a Jumpoint.
      description: Gets a paginated list of `JumpointUser` resources respresenting users who are allowed to access the Jumpoint with the given `{id}`.
      operationId: api.config.jumpoint.user.index
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpointUser"
        "404":
          $ref: "#/components/responses/404NotFound"
    post:
      summary: Grant a User access to a Jumpoint.
      description: Grants the user with the `user_id` given in the request body access to the Jumpoint with the `{id}` given in the path.
      operationId: api.config.jumpoint.user.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "201":
          description: Indicates the operation was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpointUser"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jumpoint/{id}/user/{user_id}:
    get:
      summary: Get a User with access to a Jumpoint.
      description: Get a `JumpointUser` for a user with the given `{user_id}` who is allowed to access a Jumpoint with the given `{id}`. This is primarily useful for determining if a certain user is allowed to access a certain Jumpoint.
      operationId: api.config.jumpoint.user.show
      parameters:
        - $ref: "#/components/parameters/JumpointIdParam"
        - $ref: "#/components/parameters/UserIdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpointUser"
        "404":
          $ref: "#/components/responses/404NotFound"
    delete:
      summary: Remove a User's access to a Jumpoint.
      description: Removes access to the Jumpoint with the given `{id}` for the user with the given `{user_id}`.
      operationId: api.config.jumpoint.user.destroy
      parameters:
        - $ref: "#/components/parameters/JumpointIdParam"
        - $ref: "#/components/parameters/UserIdParam"
      responses:
        "204":
          description: Indicates the user's access was successfully removed.
        "404":
          $ref: "#/components/responses/404NotFound"

  /jump-policy:
    get:
      summary: Get a paginated list of Jump Policy resources.
      description: "Gets a paginated list of Jump Policy resources matching query parameters. The following filter criteria is supported: Code Name. If no filter criteria are specified then all Jump Policies are returned. String parameters are always matched case-insensitively and exactly. No partial matches are allowed."
      operationId: api.config.jump-policy.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          schema:
            type: string
            maxLength: 64
            minLength: 0
          name: code_name
          description: Filters results to include only the Jump Policy with the given code name.
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JumpPolicy"
    post:
      summary: Create a Jump Policy.
      description: >
        Adds a new Jump Policy resource.

        The response body contains the new Jump Policy.
      operationId: api.config.jump-policy.store
      requestBody:
        description: New Jump Policy properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpPolicy"
        required: true
      responses:
        "201":
          description: Indicates the Jump Policy was created successfully and contains the new instance. The `Location` header contains the URL of the Jump Policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpPolicy"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /jump-policy/{id}:
    get:
      summary: Get a jump policy.
      description: Gets the Jump Policy resource with the given `{id}`.
      operationId: api.config.jump-policy.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpPolicy"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Jump Policy.
      description: Deletes an existing Jump Policy resource with the given `{id}`.
      operationId: api.config.jump-policy.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the Jump Policy was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Jump Policy resource.
      description: Modifies an existing Jump Policy resource with the given `{id}` using the given properties.
      operationId: api.config.jump-policy.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The Jump Policy properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JumpPolicy"
        required: true
      responses:
        "200":
          description: Indicates the existing Jump Policy was successfully updated and returns updated Jump Policy properties.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JumpPolicy"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /jump-policy/{id}/schedule:
    get:
      summary: Get the schedule of a jump policy.
      description: Gets the schedule of a specific Jump Policy.
      operationId: api.config.jump-policy.showSchedule
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"

  /public-portal:
    get:
      summary: Get a list of public portals.
      description: |
        Gets a paginated list of public portals. The default public portal has an ID of 1.
      operationId: api.config.public-portal.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PublicPortal"

  /team:
    get:
      summary: Get all Teams.
      description: |
        Gets a paginated list of teams.

        They can optionally be filtered using query string parameters documented below. If more than one filter is specified, then AND logic is used to combine the criteria. If no filter criteria are specified, then all teams are returned. String parameters are always matched case-insensitively and exactly; no partial matches are allowed.
      operationId: api.config.team.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only the team with the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - $ref: "#/components/parameters/CodeNameParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Team"
    post:
      summary: Create a Team.
      description: >
        Adds a new team resource.

        The response body contains the new team instance.

      operationId: api.config.team.store
      requestBody:
        description: New team properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
        required: true
      responses:
        "201":
          description: Indicates the team was created successfully and contains the new team instance. The `Location` header contains the URL of the team.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /team/{id}:
    get:
      summary: Get a Team.
      description: Gets the team resource with the given `{id}`.
      operationId: api.config.team.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties of a Team.
      description: Modifies an existing team resource with the given `{id}` using the given properties.
      operationId: api.config.team.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: A team object with modified properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Team"
        required: true
      responses:
        "200":
          description: Indicates the team was successfully updated and contains the updated team instance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Team.
      description: Deletes an existing team resource with the given `{id}`.
      operationId: api.config.team.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the team was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /team/{id}/user:
    get:
      summary: List Users on a given Team.
      description: Get paginated list of users belonging to a team with the given `{id}`.
      operationId: api.config.team.user.index
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamUser"
    post:
      summary: Add a User to a Team.
      description: Adds the user with the `user_id` given in the request body to the team with the `{id}` given in the path. The request body can optionally contain a `role` indicating what role the user should have on the team. The `role` defaults to "member" if not provided.
      operationId: api.config.team.user.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamUser"
        required: true
      responses:
        "201":
          description: Indicates the user was successfully added to the team.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamUser"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /team/{id}/user/{user_id}:
    get:
      summary: Get a User with access to a Team.
      description: Gets a `TeamUser` resource representing the user with the given `{user_id}` belonging to the team with the given `{id}`. This is useful for determining if the user is a member of a specific team and what their role is on that team.
      operationId: api.config.team.user.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamUser"
        "404":
          $ref: "#/components/responses/404NotFound"
    patch:
      summary: Change a User's Team membership.
      description: Modifies the role or membership of the user with the given `{user_id}` on the team with the given `{id}`. This can change the user's role on a team or move the user to a different team. This cannot modify users added to a team by a group policy.
      operationId: api.config.team.user.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeamUser"
        required: true
      responses:
        "200":
          description: Indicates the user's membership or role on the team was successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamUser"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Remove a User from a Team.
      description: Removes a user with the given `{user_id}` from the team with the given `{id}`.
      operationId: api.config.team.user.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      responses:
        "204":
          description: Indicates the user was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"

  /user:
    get:
      summary: Get all Users.
      description: |
        Gets a paginated list of user resources in the order they were created (local users) or first authenticated (non-local users).

        They can optionally be filtered using query string parameters documented below. If more than one filter is specified, then AND logic is used to combine the criteria. If no filter criteria are specified, then all users are returned. String parameters are always matched case-insensitively and exactly; no partial matches are allowed.
      operationId: api.config.user.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: security_provider_id
          description: Filters results to include only users in the security provider with the given id.
          schema:
            $ref: "#/components/schemas/ObjectId"
        - in: query
          name: username
          description: Filters results to include only users with the given username.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - in: query
          name: email_address
          description: Filters results to include only the user with the given email address.
          schema:
            type: string
            minLength: 3
            maxLength: 255

      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      summary: Create a local User.
      description: >
        Adds a new local user resource. There is no way to add non-local users via this API.


        If no password is provided, then a secure random password is automatically generated and an administrator must manually reset the password via /login.


        The `failed_logins` property is ignored for this request because it is always 0 for new users.


        The response body contains the new local user.

      operationId: api.config.user.store
      requestBody:
        description: New user properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "201":
          description: Indicates the user was created successfully and contains the new user instance. The `Location` header contains the URL of the user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /user/{id}:
    get:
      summary: Get a User.
      description: Gets the user resource with the given `{id}`.
      operationId: api.config.user.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a User.
      description: >
        Modifies an existing user resource with the given `{id}`.

        The `failed_logins` property may be set to 0 to unlock a user account that has too many failed logins.
      operationId: api.config.user.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: A user object with modified properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: Indicates the user was successfully updated and contains an updated user instance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a non-admin User.
      description: Deletes an existing user resource with the given `{id}`. Only non-administrators can be deleted.
      operationId: api.config.user.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the user was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /user/{id}/group-policy-changes:
    patch:
      summary: Update the group policy associations for a local User.
      description: >
        Adds or removes a local user from the group policies with the IDs specified in the body.

        IDs in the `added` field that the user is already a member of will be ignored. IDs in the `removed` field that the user is not a member of will be ignored.

        Only local users are allowed.
      operationId: api.config.user.group_policy_change
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The IDs of the group policies to add or remove the user from.
        content:
          application/json:
            schema:
              type: object
              properties:
                added:
                  type: array
                  items:
                    type: integer
                    minimum: 1
                    maximum: 2147483647
                  description: Array with the unique identifiers of the group policies to add the user to.
                  default: []
                removed:
                  type: array
                  items:
                    type: integer
                    minimum: 1
                    maximum: 2147483647
                  description: The unique identifier of the group policy to remove the user from.
                  default: []
        required: true
      responses:
        "200":
          description: Indicates the user was added or removed successfully from the group policiess.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicy"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /session-policy:
    get:
      summary: Get a list of Session Policies.
      description: Gets a paginated list of all session policies.
      operationId: api.config.session-policy.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SessionPolicy"

  /group-policy:
    get:
      summary: Get a list of Group Policies.
      description: |
        Gets a paginated list of all Group Policies. They can optionally be filtered using query string parameters documented below.

        If no filter criteria are specified then all Group Policies are returned.

        String parameters are always matched case-insensitively and exactly. No partial matches are allowed.

      operationId: api.config.group-policy.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only policies that match the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupPolicy"
    post:
      summary: Create a Group Policy.
      description: Adds a new group policy resource.
      operationId: api.config.group-policy.store
      requestBody:
        description: New group policy properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicy"
        required: true
      responses:
        "201":
          description: Indicates the group policy was created successfully and contains the new group policy instance. The `Location` header contains the URL of the new group policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicy"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /group-policy/{id}:
    get:
      summary: Get a Group Policy resource.
      description: Gets the Group Policy with the given `{id}`.
      operationId: api.config.group-policy.show
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicy"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Group Policy resource.
      description: Deletes an existing group policy resource with the given `{id}`.
      operationId: api.config.group-policy.destroy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      responses:
        "204":
          description: Indicates the group policy was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Group Policy resource.
      description: Modifies an existing group policy with the given `{id}` using the given properties.
      operationId: api.config.group-policy.update
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      requestBody:
        description: The Group Policy properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicy"
        required: true
      responses:
        "200":
          description: Indicates the existing group policy was successfully updated and returns the new group policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicy"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /group-policy/{id}/copy:
    post:
      summary: Duplicate an existing Group Policy.
      description: |
        Copies an existing group policy resource with the given `{id}`.

        The body of the POST must contain the name of the new group policy.

        The copied group policy retains all other settings and configuration associated with the original group policy.
      operationId: api.config.vault.group-policy.copy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      requestBody:
        description: The name of the new group policy.
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  maxLength: 255
                  minLength: 1
                  type: string
              required:
                - name
      responses:
        "201":
          description: Indicates the group policy was copied successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicy"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /group-policy/{id}/jumpoint:
    get:
      summary: Get a list of Jumpoints added to a Group Policy.
      description: Gets a paginated list of the Jumpoints added to the group policy with the given `{id}`.
      operationId: api.config.group-policy.jumpoints.index
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupPolicyJumpoint"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    post:
      summary: Adds a Jumpoint to a Group Policy.
      description: Adds the Jumpoint with the `{jumpoint_id}` given in the request body to a group policy with the given `{id}`.
      operationId: api.config.group-policy.jumpoints.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicyJumpoint"
        required: true
      responses:
        "201":
          description: Indicates that the Jumpoint was successfully added.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /group-policy/{id}/provision:
    post:
      summary: Provision the members of a Group Policy.
      description: |
        Provisions the members of an existing group policy resource with the given `{id}`.
      operationId: api.config.group-policy.provision
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      responses:
        "204":
          description: Indicates the group policy was provisioned successfully.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /group-policy/{id}/jumpoint/{jumpoint_id}:
    get:
      summary: Get a Jumpoint in a specific Group Policy.
      description: Returns a `GroupPolicyJumpoint` resource for the Jumpoint with the given `{jumpoint_id}` in the group policy with the given `{id}`. This is useful for determining if a given Jumpoint has been added to a specific group policy.
      operationId: api.config.group-policy.jumpoints.show
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: jumpoint_id
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          description: Unique identifier for the Jumpoint.
      responses:
        "200":
          description: A group policy Jumpoint resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyJumpoint"
    delete:
      summary: Removes a Jumpoint from a Group Policy.
      description: Removes the Jumpoint with the given `{jumpoint_id}` from the group policy with the given `{id}`.
      operationId: api.config.group-policy.jumpoints.destroy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: jumpoint_id
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          description: Unique identifier for the Jumpoint.
      responses:
        "204":
          description: Indicates that the Jumpoint was successfully removed.
        "404":
          $ref: "#/components/responses/404NotFound"
  /group-policy/{id}/member:
    get:
      summary: Get a list of members added to a Group Policy.
      description: Get a paginated list of `GroupPolicyMember` resources representing members that have been added to the group policy with the given `{id}`.
      operationId: api.config.group-policy.member.index
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupPolicyMember"
        "404":
          $ref: "#/components/responses/404NotFound"
    post:
      summary: Adds a member to a Group Policy.
      description: |
        Adds a member to a group policy. The fields required in the request body depend on the type of security provider the member is in.

        - Adding a local user as a member of a group policy requires the following fields: `group_policy_id`, `security_provider_id`, and `user_id`. The field `distinguished_name` must not be present.
        - Adding an LDAP user requires the following fields: `group_policy_id` and `security_provider_id`. Either `user_id` or `distinguished_name` must be provided but not both.
        - Adding an LDAP group requires the following fields: `group_policy_id`, `security_provider_id`, and `distinguished_name`.
        - RADIUS, Kerberos, and SAML users require the following fields: `group_policy_id`, `security_provider_id`, and `user_id`. RADIUS users must log into the BeyondTrust product at least once and be provisioned with a user ID.
        - Adding a SAML group requires the following fields: `group_policy_id`, `security_provider_id`, and `group_name`. The group_name must be the name of an existing group.
      operationId: api.config.group-policy.member.store
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicyMember"
        required: true
      responses:
        "201":
          description: Indicates that the Member was successfully added.
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /group-policy/{id}/member/{member_id}:
    get:
      summary: Get a member of a Group Policy.
      description: Get a `GroupPolicyMember` resource representing the member with the given `{member_id}` in the group policy with the given `{id}`. This is useful for determining if a given member exists in a specific group policy as well as the member's security provider, distinguished name, and group name, where applicable.
      operationId: api.config.group-policy.member.show
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: member_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the Member.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyMember"
        "404":
          $ref: "#/components/responses/404NotFound"
    delete:
      summary: Removes a member from a Group Policy.
      description: Removes the member with the given `{member_id}` from the group policy with the given `{id}`.
      operationId: api.config.group-policy.member.destroy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: member_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the Member.
      responses:
        "204":
          description: Indicates that the Member was successfully removed.
        "404":
          $ref: "#/components/responses/404NotFound"

  /group-policy/{id}/jump-group:
    get:
      summary: Get Jump Groups added to a Group Policy.
      description: Get a list of `GroupPolicyJumpGroup` resources representing Jump Groups added to the group policy with the given `{id}`.
      operationId: api.config.group-policy.jump-group.index
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupPolicyJumpGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
    post:
      summary: Adds a Jump Group to a Group Policy.
      description: Adds a Jump Group with the `jump_group_id` given in the request body to a group policy with the `{id}` given in the path. Optionally the request body can specify a Jump Item Role by its `jump_item_role_id`, otherwise the `jump_item_role_id` will default to 0 which means "User's Default".
      operationId: api.config.group-policy.jump-group.store
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicyJumpGroup"
        required: true
      responses:
        "201":
          description: Indicates the Jump Group was successfully added to the group policy.
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /group-policy/{id}/jump-group/{jump_group_id}:
    get:
      summary: Get a Jump Group added to a Group Policy.
      description: Gets a `GroupPolicyJumpGroup` resource representing a Jump Group with the given `{jump_group_id}` in the group policy with the given `{id}`. This is useful for determining if a given Jump Group has been aded to a given group policy and the Jump Item Role of the Jump Group in the group policy.
      operationId: api.config.group-policy.jump-group.show
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: jump_group_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the Jump Group.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyJumpGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
    delete:
      summary: Removes a Jump Group from a Group Policy.
      description: Removes the Jump Group with the given `{jump_group_id}` from the group policy with the given `{id}`.
      operationId: api.config.group-policy.jump-group.destroy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: jump_group_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the Jump Group.
      responses:
        "204":
          description: Indicates that the Jump Group was successfully removed.
  /group-policy/{id}/vault-account:
    get:
      summary: Get a list of Vault Accounts associated with this Group Policy.
      description: Get a list of `GroupPolicyVaultAccount` resources representing Vault accounts added to the group policy with the given `{id}`.
      operationId: api.config.group-policy.vault-account.index
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupPolicyVaultAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
    post:
      summary: Adds a Vault Account to a Group Policy.
      description: Adds a Vault account given in the request body to a Group Policy with the `{id}` given in the path.
      operationId: api.config.group-policy.vault-account.store
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      requestBody:
        description: New Group Policy Vault Account properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicyVaultAccount"
        required: true
      responses:
        "201":
          description: Indicates the Vault Account was added to the Group Policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyVaultAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /group-policy/{id}/vault-account/{account_id}:
    get:
      summary: Get a Vault Account added to a Group Policy.
      description: Get a `GroupPolicyVaultAccount` resource for the account with the given `{account_id}` that has been added to the group policy with the given `{id}`. This is useful for determining if a given account has been added to a certain group policy and the role the account of this group policy has.
      operationId: api.config.group-policy.vault-account.show
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: account_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the account.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyVaultAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
    delete:
      summary: Removes a Vault Account from a Group Policy.
      description: Removes the Vault account with the given `{account_id}` from the group policy with the given `{id}`.
      operationId: api.config.group-policy.vault-account.destroy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: account_id
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          description: Unique identifier for the Vault Account.
      responses:
        "200":
          description: Indicates that the Vault Account was successfully removed.
        "404":
          $ref: "#/components/responses/404NotFound"

  /group-policy/{id}/vault-account-group:
    get:
      summary: Get a list of Vault Account Groups associated with this Group Policy.
      description: Get a list of `GroupPolicyVaultAccountGroup` resources representing Vault account groups added to the group policy with the given `{id}`.
      operationId: api.config.group-policy.vault-account-group.index
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupPolicyVaultAccountGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
    post:
      summary: Adds a Vault Account Group to a Group Policy.
      description: Adds a Vault account group given in the request body to a Group Policy with the `{id}` given in the path.
      operationId: api.config.group-policy.vault-account-group.store
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      requestBody:
        description: New Group Policy Vault Account group properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicyVaultAccountGroup"
        required: true
      responses:
        "201":
          description: Indicates the Vault Account group was added to the Group Policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyVaultAccountGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /group-policy/{id}/vault-account-group/{account_group_id}:
    get:
      summary: Get a Vault Account group added to a Group Policy.
      description: Get a `GroupPolicyVaultAccountGroup` resource for the account group with the given `{account_group_id}` that has been added to the group policy with the given `{id}`. This is useful for determining if a given account group has been added to a certain group policy and the role the account group of this group policy has.
      operationId: api.config.group-policy.vault-account-group.show
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: account_group_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the account group.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyVaultAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
    delete:
      summary: Removes a Vault Account group from a Group Policy.
      description: Removes the Vault account with the given `{account_group_id}` from the group policy with the given `{id}`.
      operationId: api.config.group-policy.vault-account-group.destroy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: account_group_id
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
          description: Unique identifier for the Vault Account group.
      responses:
        "200":
          description: Indicates that the Vault Account group was successfully removed.
        "404":
          $ref: "#/components/responses/404NotFound"

  /group-policy/{id}/team:
    get:
      summary: Get Teams added to a Group Policy.
      description: Gets a paginated list of `GroupPolicyTeam` resources for the group policy with the given `{id}`.
      operationId: api.config.group-policy.team.index
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GroupPolicyTeam"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    post:
      summary: Adds a Team to a Group Policy.
      description: Adds a team with the `team_id` given in the request body to a group policy with the `{id}` given in the path. Optionally the body can contain a `role` in order to specify the role that members of this group policy will have on the team; the role defaults to "member" if not provided.
      operationId: api.config.group-policy.team.store
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GroupPolicyTeam"
        required: true
      responses:
        "201":
          description: Indicates the operation was successful.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyTeam"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /group-policy/{id}/team/{team_id}:
    get:
      summary: Get a Team added to a Group Policy.
      description: Get a `GroupPolicyTeam` resource for the team with the given `{team_id}` that has been added to the group policy with the given `{id}`. This is useful for determining if a given team has been added to a certain group policy and the role that members of this group policy will have on the team.
      operationId: api.config.group-policy.team.show
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: team_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the team.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GroupPolicyTeam"
        "404":
          $ref: "#/components/responses/404NotFound"

    delete:
      summary: Removes a Team from a Group Policy.
      description: Removes the team with the given `{team_id}` from the group policy with the given `{id}`.
      operationId: api.config.group-policy.team.destroy
      parameters:
        - $ref: "#/components/parameters/GroupPolicyIdParam"
        - in: path
          name: team_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the team.
      responses:
        "204":
          description: Indicates that the team was successfully removed.
        "404":
          $ref: "#/components/responses/404NotFound"
  /security-provider:
    get:
      summary: Get a list of Security Providers.
      description: |
        Gets a paginated list of security providers.
        For clustered security providers, only the parent provider is listed. Child providers are not listed because users are always associated with the parent provider.
        Security providers that only do group lookups are not listed because users are not associated with such providers.
      operationId: api.config.security-provider.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SecurityProvider"
  /security-provider/{id}:
    get:
      summary: Get a Security Provider.
      description: Gets the Security Provider with the given `{id}`. A type-specific resource is returned.
      operationId: api.config.security-provider.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/SAMLSecurityProvider"
                  - $ref: "#/components/schemas/SAMLForPublicPortalsSecurityProvider"
                  - $ref: "#/components/schemas/LDAPSecurityProvider"
                  - $ref: "#/components/schemas/LocalSecurityProvider"
                  - $ref: "#/components/schemas/RadiusSecurityProvider"
                  - $ref: "#/components/schemas/KerberosSecurityProvider"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update available_groups on a SAML Security Providers resource.
      description: Modifies an existing Security Provider resource of type SAML with the given `{id}` using the given properties.
      operationId: api.config.security-provider.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: A Security Provider resource with modified properties.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/SAMLSecurityProvider"
        required: true
      responses:
        "200":
          description: Indicates the existing Security Provider was successfully updated and returns the Security Provider.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/SAMLSecurityProvider"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account:
    get:
      summary: Get a list of Vault Accounts.
      description: |
        Gets a paginated list of all Vault accounts. They can optionally be filtered using query string parameters documented below.

        If more than one criteria is specified then AND logic is used to combine the criteria. For example, if both a type and name are specified then all Vault accounts with a matching type and name are returned.

        If no filter criteria are specified then all Vault accounts are returned.

        String parameters are always matched case-insensitively and exactly. No partial matches are allowed.

      operationId: api.config.vault.account.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: type
          description: Filters results to include only accounts of a the given type.
          schema:
            type: string
            enum: [username_password, ssh, ssh_ca, windows_local, windows_domain]
        - in: query
          name: name
          description: Filters results to include only accounts that match the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - in: query
          name: include_personal
          description: Set to "true" to allow results to include personal accounts.
          schema:
            type: boolean
            default: false
        - in: query
          name: account_group_id
          description: Filters results to include only accounts that match the given vault account group.
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
        - in: query
          name: endpoint_id
          description: Filters results to include only Windows Local accounts with the given Endpoint.
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaultAccount"
    post:
      summary: Create a generic Vault Account.
      description: |
        Adds a new username / password account or SSH account. Windows local and domain accounts cannot be added via this API.

        The request body must either be a `VaultUsernamePasswordAccount` resource or a `VaultSSHAccount` resource.

        After an account is added via the API, the Vault Account Activity Report shows an "Account Created" event for that account. The "User" column shows the name of the API Account that created the account.
      operationId: api.config.vault.account.store
      requestBody:
        description: New account properties.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/VaultUsernamePasswordAccount"
                - $ref: "#/components/schemas/VaultSSHAccount"
        required: true
      responses:
        "201":
          description: Indicates the account was created successfully and contains the new account instance. The `Location` header contains the URL of the account.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/VaultUsernamePasswordAccount"
                  - $ref: "#/components/schemas/VaultSSHAccount"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/account/{id}:
    get:
      summary: Get a Vault Account.
      description: Gets the Vault account with the given `{id}`. A type-specific resource is returned.
      operationId: api.config.vault.account.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/VaultUsernamePasswordAccount"
                  - $ref: "#/components/schemas/VaultSSHAccount"
                  - $ref: "#/components/schemas/VaultLocalAccount"
                  - $ref: "#/components/schemas/VaultDomainAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Vault Account resource.
      description: Modifies an existing vault account with the given `{id}` using the given properties.
      operationId: api.config.vault.account.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The Vault Account properties to modify.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/VaultUsernamePasswordAccount"
                - $ref: "#/components/schemas/VaultSSHAccount"
        required: true
      responses:
        "200":
          description: Indicates the existing vault account was successfully updated and returns the new vault account.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/VaultUsernamePasswordAccount"
                  - $ref: "#/components/schemas/VaultSSHAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Vault Account.
      description: Removes the account with the given `{id}`. Personal accounts are not eligible for deletion through this API.
      operationId: api.config.vault.account.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates that the account was successfully removed.
        "403":
          description: Indicates that the account was personal and not eligible for deletion.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account/{id}/check-out:
    post:
      summary: Check out a Vault Account's password or private key.
      description: Checks out a Vault account's password or private key and returns it in the response. This API supports all Vault account types, including Windows Local and Windows Domain accounts.
      operationId: api.config.vault.account.check-out
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountCredential"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/account/{id}/check-in:
    post:
      summary: Check in a Vault Account's password or private key.
      description: Checks in a Vault account's password or private key. This API supports all Vault account types, including Windows Local and Windows Domain accounts.
      operationId: api.config.vault.account.check-in
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: The account was checked-in successfully.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/account/{id}/force-check-in:
    post:
      summary: Force check in a Vault Account's password.
      description: Forcefully checks in a Vault account's password that was previously checked out by a different user or API account. This API supports all Vault account types, except `ssh` and `ssh_ca` accounts.
      operationId: api.config.vault.account.force-check-in
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: The account was forcibly checked-in successfully.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/account/{id}/rotate:
    post:
      summary: Schedules a credential rotation.
      description: Schedules a credential rotation for the Windows Domain or Windows Local account with the given `{id}`. An error is returned for accounts that cannot be rotated by the system.
      operationId: api.config.vault.account.rotate
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: The account was rotated successfully.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/account/{id}/user:
    get:
      summary: Get a list of Users with access to a Vault Account.
      description: |
        Gets a paginated list of `VaultAccountUser` resources representing users who are explicitly granted access to the Vault account with the given `{id}`.
        This list does not include users implicitly granted access via a group policy or account group.
      operationId: api.config.vault.account.user.index
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaultAccountUser"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    post:
      summary: Adds a User to a Vault Account.
      description: >
        Adds a user to the Vault account with the given `{id}`.

        The response body contains the new `VaultAccountUser` resource.
      operationId: api.config.vault.account.user.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountUser"
        required: true
      responses:
        "201":
          description: Indicates the user was sucessfully added to the Vault account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountUser"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
        "403":
          description: Indicates that the account was personal and not eligible for adding a user.
  /vault/account/{id}/user/{user_id}:
    get:
      summary: Get a User of a Vault Account.
      description: |
        Get a `VaultAccountUser` resource representing the user with the given `{user_id}` of the Vault account with the given `{id}`.
      operationId: api.config.vault.account.user.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the User.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountUser"
        "404":
          $ref: "#/components/responses/404NotFound"
    patch:
      summary: Change a User's Vault Account membership.
      description: Modifies the role of the user with the given `{user_id}` on the vault account with the given `{id}`. This cannot modify users added by a group policy or account group.
      operationId: api.config.vault.account.user.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountUser"
        required: true
      responses:
        "200":
          description: Indicates the role on the account was successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountUser"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
        "403":
          description: Indicates that the account was personal and not eligible for updating a user.
    delete:
      summary: Remove a User from a Vault Account.
      description: Removes the user with the given `{user_id}` from the Vault account with the given `{id}`.
      operationId: api.config.vault.account.user.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the user.
      responses:
        "204":
          description: Indicates the user was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "403":
          description: Indicates that the account was personal and not eligible for removing a user.
  /vault/account/{id}/jump-item-association:
    get:
      summary: Get Jump Item association criteria for an Account.
      description: |
        Get the Jump Item association criteria for the Account with the given `{id}`.

        This API cannot be used if the Account is inheriting Jump Item association criteria from its Account Group. Instead, query its Account Group's associations using the <a href="#api.config.vault.account-group.jump-item-association.show">Account Group's GET API for Jump Item associations</a>.
      operationId: api.config.vault.account.jump-item-association.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountJumpItemAssociation"
    post:
      summary: Add Jump Item association criteria for an Account.
      description: |
        For an account that has no explicit Jump Item associations defined and is currently inheriting association criteria from its Account Group, this API will add Jump Item association criteria for the Account with the given `{id}` using the data in the request body. This should be used only if the Account does not already have any Jump Item association defined.

        If you set the `filter_type` to "criteria", then you must provide some properties in the `criteria` field. You may specify some or all of the available `criteria` properties. Once you have created association criteria with this POST API, separate APIs exist for adding or deleting single Jump Item or shared Jump Group ids from their respective lists in `criteria`, which might be preferable to supplying the entire array of ids up front with this API:

        - <a href="#api.config.vault.account.jump-item-association.jump-item.store">Add a single Jump Item to `jump_items`.</a>
        - <a href="#api.config.vault.account.jump-item-association.jump-item.destroy">Remove a single Jump Item from `jump_items`.</a>
        - <a href="#api.config.vault.account.jump-item-association.shared-jump-group.store">Add a single Jump Group to `shared_jump_groups`.</a>
        - <a href="#api.config.vault.account.jump-item-association.shared-jump-group.destroy">Remove a single Jump Group from `shared_jump_groups`.</a>

        If the `filter_type` is set to "any_jump_items" or "no_jump_items", the `criteria` field will be ignored.

        Once you have used this API to add Jump Item association criteria, use the <a href="#api.config.vault.account.jump-item-association.update">PATCH API</a> to change the `filter_type` and / or `criteria`. To change this Account back to inheriting Jump Item association criteria from its Account Group, use the <a href="#api.config.vault.account.jump-item-association.destroy">DELETE API</a>.

        This API cannot be used if the Account already has Jump Item association criteria defined. If you wish to update the current Jump Item association criteria, use the <a href="#api.config.vault.account.jump-item-association.update">PATCH API</a> instead.
      operationId: api.config.vault.account.jump-item-association.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountJumpItemAssociation"
        required: true
      responses:
        "201":
          description: The Jump Item association criteria were created successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountJumpItemAssociation"
    patch:
      summary: Update the Jump Item association criteria for an Account.
      description: |
        Update the Jump Item association criteria for the Account with the given `{id}` using the data in the request body.

        You may change either or both of the `filter_type` and `criteria` properties of the association object in a single request, but `criteria` will be ignored if the `filter_type` is not set to "criteria". Updating `filter_type` from "criteria" to "any_jump_items" or "no_jump_items" implicitly deletes all previous `criteria` for the account.

        If you want the account to inherit associations from its Account Group you must use the endpoint:

        - <a href="#api.config.vault.account.jump-item-association.destroy">Delete Jump Item association criteria for an Account.</a>

        You may specify some or all of the available `criteria` properties. Each `criteria` property you supply will *replace* the previous value for that property. To keep the existing values for a certain property, omit that property from the request. Separate APIs exist for adding or deleting single Jump Items or shared Jump Groups, which might be preferable to supplying the entire array of ids with this API:

        - <a href="#api.config.vault.account.jump-item-association.jump-item.store">Add a single Jump Item to `jump_items`.</a>
        - <a href="#api.config.vault.account.jump-item-association.jump-item.destroy">Remove a single Jump Item from `jump_items`.</a>
        - <a href="#api.config.vault.account.jump-item-association.shared-jump-group.store">Add a single Jump Group to `shared_jump_groups`.</a>
        - <a href="#api.config.vault.account.jump-item-association.shared-jump-group.destroy">Remove a single Jump Group from `shared_jump_groups`.</a>

        This API cannot be used if the given Account is inheriting Jump Item association criteria from its Account Group and does not have any of its own Jump Item associations defined. To create association criteria specifically for this Account, use the <a href="#api.config.vault.account.jump-item-association.store">POST API</a> instead.
      operationId: api.config.vault.account.jump-item-association.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountJumpItemAssociation"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountJumpItemAssociation"
    delete:
      summary: Delete Jump Item association criteria for an Account.
      description: |
        For an Account with the given `{id}` that has Jump Item associations defined, this API removes those associations so that the Account begins inheriting associations from its Account Group instead.

        This API cannot be used if the given Account is inheriting Jump Item association criteria from its Account Group and does not have any of its own Jump Item associations defined, since there is nothing to delete.
      operationId: api.config.vault.account.jump-item-association.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates that the Jump Item association was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account/{id}/jump-item-association/jump-item:
    post:
      summary: Add a Jump Item to an Account's Jump Item association criteria.
      description: |
        Adds a specific Jump Item identified in the request body to the Jump Item association criteria of the Account with the given `{id}`.

        The Account's Jump Item association must have its `filter_type` set to "criteria".

        This API cannot be used if the given Account is inheriting Jump Item association criteria from its Account Group and does not have any of its own Jump Item associations defined. To create association criteria specifically for this Account, use the <a href="#api.config.vault.account.jump-item-association.store">POST API</a> instead.

        Currently Remote Jump Items cannot be added.
      operationId: api.config.vault.account.jump-item-association.jump-item.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: Identifies the Jump Item to add.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountInjectableJumpItem"
        required: true
      responses:
        "200":
          description: Indicates the Jump Item was successfully added to the Account's Jump Item association criteria.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Remove a Jump Item from an Account's Jump Item association criteria.
      description: |
        Removes a specific Jump Item identified in the request body from the Jump Item association criteria of the Account with the given `{id}`.

        The Account's Jump Item association must have its `filter_type` set to "criteria".

        This API cannot be used if the given Account is inheriting Jump Item association criteria from its Account Group and does not have any of its own Jump Item associations defined. To create association criteria specifically for this Account, use the <a href="#api.config.vault.account.jump-item-association.store">POST API</a> instead.
      operationId: api.config.vault.account.jump-item-association.jump-item.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: Identifies the Jump Item to remove.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountInjectableJumpItem"
        required: true
      responses:
        "204":
          description: Indicates the Jump Item was successfully removed from the Account's Jump Item association criteria.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account/{id}/jump-item-association/shared-jump-group:
    post:
      summary: Add a shared Jump Group to an Account's Jump Item association criteria.
      description: |
        Adds a specific shared Jump Group identified by `shared_jump_group_id` in the request body to the Jump Item association criteria of the Account with the given `{id}`.

        The Account's Jump Item association must have its `filter_type` set to "criteria".

        This API cannot be used if the given Account is inheriting Jump Item association criteria from its Account Group and does not have any of its own Jump Item associations defined. To create association criteria specifically for this Account, use the <a href="#api.config.vault.account.jump-item-association.store">POST API</a> instead.
      operationId: api.config.vault.account.jump-item-association.shared-jump-group.store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_jump_group_id:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 2147483647
                  description: The unique identifier assigned to the shared Jump Group by the system.
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: Indicates the shared Jump Group was successfully added to the Account's Jump Item association criteria.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Remove a shared Jump Group from an Account's Jump Item association criteria.
      description: |
        Removes a specific shared Jump Group identified by `{shared_jump_group_id}` from the Jump Item association criteria of the Account with the given `{id}`.

        The Account's Jump Item association must have its `filter_type` set to "criteria".

        This API cannot be used if the given Account is inheriting Jump Item association criteria from its Account Group and does not have any of its own Jump Item associations defined. To create association criteria specifically for this Account, use the <a href="#api.config.vault.account.jump-item-association.store">POST API</a> instead.
      operationId: api.config.vault.account.jump-item-association.shared-jump-group.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shared_jump_group_id:
                  type: integer
                  minimum: 1
                  maximum: 2147483647
                  description: Unique identifier for the shared Jump Group.
        required: true
      responses:
        "204":
          description: Indicates the shared Jump Group was successfully removed from the Account's Jump Item association criteria.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/endpoint:
    get:
      summary: Get a list of Vault Endpoints.
      description: |
        Gets a paginated list of all Vault endpoints. They can optionally be filtered using query string parameters documented below.

        If no filter criteria are specified then all Vault endpoints are returned.

        String parameters are always matched case-insensitively and exactly. No partial matches are allowed.

      operationId: api.config.vault.endpoint.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only endpoints that match the given name.
          schema:
            type: string
            maxLength: 128
            minLength: 1
        - in: query
          name: hostname
          description: Filters results to include only endpoints that match the given hostname.
          schema:
            type: string
            maxLength: 128
            minLength: 1
        - in: query
          name: description
          description: Filters results to include only endpoints that match the given description.
          schema:
            type: string
            maxLength: 1024
        - in: query
          name: domain_name
          description: Filters results to include only endpoints that match the given domain name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultEndpoint"

  /vault/endpoint/{id}/remote-rdp-jump-item-candidates:
    get:
      summary: List Remote RDP Jump Items to associate to a vault endpoint.
      description: Lists existing Remote RDP Jump Items that can be associated to the Vault Endpoint with the given `{id}`.
      operationId: api.config.vault.endpoint.list-candidates
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RemoteRdpCandidate"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/endpoint/{id}/remote-rdp-jump-item-association:
    post:
      summary: Associate a Remote RDP Jump Item to a Vault endpoint.
      description: Associates an existing remote RDP Jump Items with vault endpoint with the given `{id}`. The endpoint associations can be consulted at `/jump-item/remote-rdp?endpoint_id={id}`.
      operationId: api.config.vault.endpoint.associate
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 2147483647
                  description: The unique identifier for the Remote RDP Jump Item.
        required: true
      responses:
        "201":
          description: Indicates the association was successfully made.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RemoteRdpCandidate"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/account-group:
    get:
      summary: Get a list of Vault Account Groups.
      description: |
        Gets a paginated list of all Vault account groups. They can optionally be filtered using query string parameters documented below.

        If no filter criteria are specified then all Vault account groups are returned.

        String parameters are always matched case-insensitively and exactly. No partial matches are allowed.

      operationId: api.config.vault.account-group.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only account groups that match the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroup"
    post:
      summary: Create a Vault Account Group.
      description: |
        Creates a new account group resource.

        The response body contains the new account group.
      operationId: api.config.vault.account-group.store
      requestBody:
        description: New account group properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountGroup"
        required: true
      responses:
        "201":
          description: Indicates the account group was created successfully and contains the new account group instance. The `Location` header contains the URL of the account group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroup"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account-group/{id}:
    get:
      summary: Get a Vault Account Group.
      description: Gets the Vault account group with the given `{id}`. A type-specific resource is returned.
      operationId: api.config.vault.account-group.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete an Account Group.
      description: Deletes an existing account group with the given `{id}`. Note that all accounts associated with the account group will be moved to default group.
      operationId: api.config.vault.account-group.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the account group was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Vault Account Group resource.
      description: Modifies an existing vault account group with the given `{id}` using the given properties.
      operationId: api.config.vault.account-group.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The Vault Account Group properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountGroup"
        required: true
      responses:
        "200":
          description: Indicates the existing vault account group was successfully updated and returns the new vault account group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroup"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account-group/{id}/user:
    get:
      summary: Get a list of Users with access to a Vault Account Group.
      description: |
        Gets a paginated list of `VaultAccountGroupUser` resources representing users who are explicitly granted access to the Vault account group with the given `{id}`.
        This list does not include users implicitly granted access via a group policy.
      operationId: api.config.vault.account-group.user.index
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaultAccountGroupUser"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    post:
      summary: Adds a User to a Vault Account Group.
      description: >
        Adds a user to the Vault account group with the given `{id}`.

        The response body contains the new `VaultAccountGroupUser` resource.
      operationId: api.config.vault.account-group.user.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountGroupAccount"
        required: true
      responses:
        "201":
          description: Indicates the user was sucessfully added to the Vault account group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroupUser"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account-group/{id}/user/{user_id}:
    get:
      summary: Get a User in a Vault Account Group.
      description: |
        Get a `VaultAccountGroupUser` resource representing the user with the given `{user_id}` in the Vault account group with the given `{id}`.
      operationId: api.config.vault.account-group.user.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the User.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroupUser"

        "404":
          $ref: "#/components/responses/404NotFound"
    delete:
      summary: Remove a User from a Vault Account Group.
      description: Removes the user with the given `{user_id}` from the Vault account group with the given `{id}`.
      operationId: api.config.vault.account-group.user.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the user.
      responses:
        "204":
          description: Indicates the user was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
    patch:
      summary: Change a User's Vault Account Group membership.
      description: Modifies the role of the user with the given `{user_id}` on the vault account group with the given `{id}`. This cannot modify users added to a account group by a group policy.
      operationId: api.config.vault.account-group.user.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: user_id
          description: The unique id of the user.
          required: true
          schema:
            $ref: "#/components/schemas/ObjectId"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountGroupUser"
        required: true
      responses:
        "200":
          description: Indicates the role on the group was successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroupUser"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account-group/{id}/account:
    get:
      summary: Get a list of Accounts in a Vault Account Group.
      description: Gets a paginated list of `VaultAccountGroupAccount` resources representing accounts that are part of the Vault Account Group with the given `{id}`.
      operationId: api.config.vault.account-group.account.index
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VaultAccountGroupAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    post:
      summary: Adds a Vault Account to a Vault Account Group.
      description: >
        This API adds a Vault account to the Vault account group with the given `{id}`.

        If the account is part of any other group, then it will implicitly moved from its prior group into this new group.

        The response body contains the new Vault account group account resource.
      operationId: api.config.vault.account-group.account.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                account_id:
                  type: integer
                  format: int32
                  minimum: 1
                  maximum: 2147483647
                  readOnly: true
                  description: The unique identifier assigned to the account by the system.
        required: true
      responses:
        "201":
          description: Indicates the account was sucessfully added to the Vault account group.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroupAccount"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account-group/{id}/account/{account_id}:
    get:
      summary: Get an account of Vault Account Group.
      description: |
        Get a `VaultAccountGroupAccount` resource representing the account with the given `{id}` in the Vault account group with the given  `{id}`. This is useful for determining if a given account exists in a specific Vault account group.
      operationId: api.config.vault.account-group.account.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: account_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the Account.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountGroupAccount"
        "404":
          $ref: "#/components/responses/404NotFound"
    delete:
      summary: Remove a Vault Account from a Vault Account Group.
      description: Removes the Vault account with the given `{account_id}` from the Vault account group with the given `{id}` and add it to the default Vault account group.
      operationId: api.config.vault.account-group.account.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: account_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the Account.
      responses:
        "204":
          description: Indicates the Vault Account Group Account was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
  /vault/account-group/{id}/jump-item-association:
    get:
      summary: Get Jump Item association criteria for an Account Group.
      description: Get the Jump Item association criteria for the Account Group with the given `{id}`.
      operationId: api.config.vault.account-group.jump-item-association.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountJumpItemAssociation"
    patch:
      summary: Update the Jump Item association criteria for an Account Group.
      description: |
        Update the Jump Item association criteria for the Account Group with the given `{id}` using the data in the request body.

        You may change either or both of the `filter_type` and `criteria` properties of the association object in a single request, but `criteria` will be ignored if the `filter_type` is not set to "criteria". Updating `filter_type` from "criteria" to "any_jump_items" or "no_jump_items" implicitly deletes all previous `criteria` for the account group.

        You may specify some or all of the available `criteria` properties. Each `criteria` property you supply will *replace* the previous value for that property. To keep the existing values for a certain property, omit that property from the request. Separate APIs exist for adding or deleting single Jump Items or shared Jump Groups, which might be preferable to supplying the entire array of ids with this API:

        - <a href="#api.config.vault.account-group.jump-item-association.jump-item.store">Add a single Jump Item to `jump_items`.</a>
        - <a href="#api.config.vault.account-group.jump-item-association.jump-item.destroy">Remove a single Jump Item from `jump_items`.</a>
        - <a href="#api.config.vault.account-group.jump-item-association.shared-jump-group.store">Add a single Jump Group to `shared_jump_groups`.</a>
        - <a href="#api.config.vault.account-group.jump-item-association.shared-jump-group.destroy">Remove a single Jump Group from `shared_jump_groups`.</a>
      operationId: api.config.vault.account-group.jump-item-association.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountJumpItemAssociation"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountJumpItemAssociation"
  /vault/account-group/{id}/jump-item-association/jump-item:
    post:
      summary: Add a Jump Item to an Account Group's Jump Item association criteria.
      description: |
        Adds a specific Jump Item identified in the request body to the Jump Item association criteria of the Account Group with the given `{id}`.

        The Account Group's Jump Item association must have its `filter_type` set to "criteria".

        Currently Remote Jump Items cannot be added.
      operationId: api.config.vault.account-group.jump-item-association.jump-item.store
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: Identifies the Jump Item to add.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountInjectableJumpItem"
        required: true
      responses:
        "200":
          description: Indicates the Jump Item was successfully added to the Account Group's Jump Item association criteria.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountInjectableJumpItem"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Remove a Jump Item from an Account Group's Jump Item association criteria.
      description: |
        Removes a specific Jump Item identified in the request body from the Jump Item association criteria of the Account Group with the given `{id}`.

        The Account Group's Jump Item association must have its `filter_type` set to "criteria".
      operationId: api.config.vault.account-group.jump-item-association.jump-item.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: Identifies the Jump Item to remove.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountInjectableJumpItem"
        required: true
      responses:
        "204":
          description: Indicates the Jump Item was successfully removed from the Account Group's Jump Item association criteria.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account-group/{id}/jump-item-association/shared-jump-group:
    post:
      summary: Add a shared Jump Group to an Account Group's Jump Item association criteria.
      description: |
        Adds a specific shared Jump Group identified by `shared_jump_group_id` in the request body to the Jump Item association criteria of the Account Group with the given `{id}`.

        The Account Group's Jump Item association must have its `filter_type` set to "criteria".
      operationId: api.config.vault.account-group.jump-item-association.shared-jump-group.store
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountJumpGroupAssociationItem"
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: Indicates the shared Jump Group was successfully added to the Account Group's Jump Item association criteria.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountJumpGroupAssociationResponse"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Remove a shared Jump Group from an Account Group's Jump Item association criteria.
      description: |
        Removes a specific shared Jump Group identified by `{shared_jump_group_id}` from the Jump Item association criteria of the Account Group with the given `{id}`.

        The Account Group's Jump Item association must have its `filter_type` set to "criteria".
      operationId: api.config.vault.account-group.jump-item-association.shared-jump-group.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
        - in: path
          name: shared_jump_group_id
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 2147483647
          description: Unique identifier for the shared Jump Group.
      responses:
        "204":
          description: Indicates the shared Jump Group was successfully removed from the Account Group's Jump Item association criteria.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /vault/account-policy:
    get:
      summary: Get a list of Vault Account Policies.
      description: |
        Gets a paginated list of all Vault account policies. They can optionally be filtered using query string parameters documented below.

        If no filter criteria are specified then all Vault account policies are returned.

        String parameters are always matched case-insensitively and exactly. No partial matches are allowed.
      operationId: api.config.vault.account-policy.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only account policies that match the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
        - in: query
          name: code_name
          description: Filters results to include only account policies that match the given code name.
          schema:
            type: string
            maxLength: 64
            minLength: 0
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountPolicy"
    post:
      summary: Create a Vault Account Policy.
      description: |
        Creates a new account policy resource.

        The response body contains the new account policy.
      operationId: api.config.vault.account-policy.store
      requestBody:
        description: New account policy properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountPolicy"
        required: true
      responses:
        "201":
          description: Indicates the account policy was created successfully and contains the new account policy instance. The `Location` header contains the URL of the account policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountPolicy"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /vault/account-policy/{id}:
    get:
      summary: Get a Vault Account Policy.
      description: Gets the Vault account policy with the given `{id}`. A type-specific resource is returned.
      operationId: api.config.vault.account-policy.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountPolicy"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete an Account Policy.
      description: Deletes an existing account policy with the given `{id}`. Note that all accounts associated with the account policy will be moved to default policy. You may not delete the default policy.
      operationId: api.config.vault.account-policy.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the account policy was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Vault Account Policy resource.
      description: Modifies an existing vault account policy with the given `{id}` using the given properties.
      operationId: api.config.vault.account-policy.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The Vault Account Policy properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VaultAccountPolicy"
        required: true
      responses:
        "200":
          description: Indicates the existing vault account policy was successfully updated and returns the new vault account policy.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VaultAccountPolicy"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /rep-status:
    get:
      summary: Get a list of rep statuses.
      description: |
        Gets a list of rep statuses. They can optionally be filtered using query string parameters documented below.

        If no filter criteria are specified then all rep status codes are returned.

        String parameters are always matched case-insensitively and exactly. No partial matches are allowed.
      operationId: api.config.rep-status.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only rep statuses with the given name.
          schema:
            type: string
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RepStatus"
    post:
      summary: Create a Rep Status.
      description: |
        Creates a new rep status resource.

        The response body contains the new rep status.
      operationId: api.config.rep-status.store
      requestBody:
        description: New rep status properties.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepStatus"
      responses:
        "201":
          description: Indicates the rep status was created successfully. The `Location` header contains the URL of the rep status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepStatus"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
  /rep-status/{id}:
    get:
      summary: Get a Rep Status.
      description: Gets the rep status with the given `{id}`. A type-specific resource is returned.
      operationId: api.config.rep-status.show
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepStatus"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    patch:
      summary: Update properties on a Rep Status resource.
      description: Modifies an existing rep status with the given `{id}` using the given properties. You may not modify the default available status or the `display_as` attributes for the default away and busy statuses.
      operationId: api.config.rep-status.update
      parameters:
        - $ref: "#/components/parameters/IdParam"
      requestBody:
        description: The Rep Status properties to modify.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepStatus"
      responses:
        "200":
          description: Indicates the existing rep status was successfully updated and returns the new rep status.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RepStatus"
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"
    delete:
      summary: Delete a Rep Status.
      description: Deletes an existing rep status with the given `{id}`. You may not delete the default rep statuses.
      operationId: api.config.rep-status.destroy
      parameters:
        - $ref: "#/components/parameters/IdParam"
      responses:
        "204":
          description: Indicates the rep status was successfully deleted.
        "404":
          $ref: "#/components/responses/404NotFound"
        "422":
          $ref: "#/components/responses/422UnprocessableEntity"

  /openapi.yaml:
    get:
      summary: Get this API documentation in OpenAPI v3 YAML format.
      description: |
        This returns a YAML document containing an [OpenAPI specification](https://swagger.io/docs/specification/about/) for all available BeyondTrust Remote Support Configuration APIs. [Many tools](https://openapi.tools/) exist that can read this document and generate resources you may find helpful. For instance, some tools can help generate client code for interacting with the API. Other tools are able to generate various forms of API documentation. (If you're reading this on a web page, the page was probably generated from a response to this API.)
      operationId: api.config.spec
      responses:
        "200":
          description: OK
          content:
            application/yaml:
              schema:
                type: object
  /cli/{platform}:
    get:
      summary: Get the CLI tool to interact with Configuration APIs.
      description: |
        This returns the CLI tool that makes it easier to leverage configuration APIs.
      operationId: api.config.cli
      parameters:
        - in: path
          required: true
          name: platform
          description: The platform type to download
          schema:
            type: string
            enum: [linux, win32, macos]
      responses:
        "200":
          description: OK
          content:
            application/zip:
              schema:
                type: string
                format: binary
  /api-account:
    get:
      summary: Get all API Accounts.
      description: |
        Gets a paginated list of api account resources.

        They can optionally be filtered using query string parameters documented below. If no filter criteria are specified, then all api accounts are returned. String parameters are always matched case-insensitively and exactly; no partial matches are allowed.
      operationId: api.config.api-account.index
      parameters:
        - $ref: "#/components/parameters/PerPageParam"
        - $ref: "#/components/parameters/CurrentPageParam"
        - in: query
          name: name
          description: Filters results to include only api accounts with the given name.
          schema:
            type: string
            maxLength: 255
            minLength: 1
      responses:
        "200":
          description: OK
          headers:
            Link:
              $ref: "#/components/headers/Link"
            X-BT-Pagination-Current-Page:
              $ref: "#/components/headers/X-BT-Pagination-Current-Page"
            X-BT-Pagination-Per-Page:
              $ref: "#/components/headers/X-BT-Pagination-Per-Page"
            X-BT-Pagination-Last-Page:
              $ref: "#/components/headers/X-BT-Pagination-Last-Page"
            X-BT-Pagination-Total:
              $ref: "#/components/headers/X-BT-Pagination-Total"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ApiAccount"

components:
  schemas:
    ObjectId:
      type: integer
      format: int32
      minimum: 1
      maximum: 2147483647

    PerPage:
      type: integer
      minimum: 5
      maximum: 100

    CurrentPage:
      type: integer
      format: int32
      minimum: 1

    CodeName:
      type: string
      maxLength: 64
      minLength: 0
      pattern: '^[a-zA-Z0-9_\\-]+$'
      description: The code name of a resource.

    ErrorMessageResponse:
      type: object
      description: A high-level error about a request, not about any specific request field in particular.
      properties:
        message:
          type: string

    ErrorBagResponse:
      type: object
      description: Key-value pairs where the keys are request field names and the values are arrays of error messages about that field.
      additionalProperties:
        type: array
        items:
          type: string

    OAuthErrorResponse:
      type: object
      description: Type of response returned for an OAuth2-related error.
      properties:
        error:
          type: string
          enum: ["access_denied", "invalid_client", "invalid_credentials", "invalid_grant", "invalid_request", "server_error", "unauthorized_client", "unsupported_grant_type", "unsupported_response_type"]
          description: An error type identifier.
        message:
          type: string
          description: A human-readable error message.

    RemoteRdpJumpItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: >
            The unique identifier assigned to this RDP Jump Item by Remote Support.
            Other Jump Item types, like Shell Jump Items, may duplicate this identifier.
            The combination of Jump Item Type + id uniquely identifies any Jump Item in the system.
        name:
          type: string
          maxLength: 128
          minLength: 1
          description: The name of the Remote RDP Jump Item.
        jumpoint_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jumpoint through which connections are made.
        hostname:
          type: string
          maxLength: 128
          minLength: 1
          description: The hostname or IP address used to connect over RDP.
        jump_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Group or user that owns this Jump Item.
        jump_group_type:
          type: string
          enum: [shared, personal]
          default: shared
          description: The type of Jump Group that owns this Jump Item.
        quality:
          type: string
          default: video
          enum:
            - low
            - performance
            - performance_quality
            - quality
            - video
            - lossless
          description: >
            The quality of the connection. One of the following:
              * low
              * performance
              * performance_quality
              * quality
              * video
              * lossless
        console:
          type: boolean
          default: false
          description: If true, starts a console session. If false, starts a new session.
        ignore_untrusted:
          type: boolean
          default: false
          description: >
            If true, untrusted server certificates are ignored.
            If false, the user is shown a warning when the server's certificate cannot be verified.
        tag:
          type: string
          minLength: 0
          maxLength: 64
          description: The Jump Item's tag.
        comments:
          type: string
          minLength: 0
          maxLength: 1024
          description: The Jump Item's comments.
        rdp_username:
          type: string
          maxLength: 128
          minLength: 0
          description: The Endpoint username.
        domain:
          type: string
          maxLength: 64
          minLength: 0
          description: The Endpoint domain.
        jump_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Policy used to manage access to this Jump Item.
        session_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 2
          maximum: 2147483647
          description: The unique identifier of the Session Policy.
        endpoint_id:
          description: The unique identifier of the linked Endpoint. This is `null` when no endpoint is linked to the RDP connection.
          type: integer
          format: int32
          readOnly: true
          minimum: 1
          maximum: 2147483647
          nullable: true
      required:
        - name
        - jumpoint_id
        - hostname
        - jump_group_id

    RemoteVncJumpItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: >
            The unique identifier assigned to this Remote VNC Jump Item by Remote Support.
            Other Jump Item types, like Remote RDP Jump Items, may duplicate this identifier.
            The combination of Jump Item Type + id uniquely identifies any Jump Item in the system.
        name:
          type: string
          maxLength: 128
          minLength: 1
          description: The name of the Remote VNC Jump Item.
        jumpoint_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jumpoint through which connections are made.
        hostname:
          type: string
          maxLength: 128
          minLength: 1
          description: The hostname or IP address.
        port:
          type: integer
          format: int32
          minimum: 100
          maximum: 65535
          default: 5900
          description: The port to use. Must be between 100 and 65535, inclusive.
        jump_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Group or user that owns this Jump Item.
        jump_group_type:
          type: string
          enum: [shared, personal]
          description: The type of Jump Group that owns this Jump Item.
          default: shared
        tag:
          type: string
          minLength: 0
          maxLength: 64
          description: The Jump Item's tag.
        comments:
          type: string
          minLength: 0
          maxLength: 1024
          description: The Jump Item's comments.
        jump_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Policy used to manage access to this Jump Item.
        session_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 2
          maximum: 2147483647
          description: The unique identifier of the Session Policy used to control the rep's capabilities in the session.
      required:
        - name
        - hostname
        - jumpoint_id
        - jump_group_id

    ShellJumpItem:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: >
            The unique identifier assigned to this Shell Jump Item by Remote Support.
            Other Jump Item types, like Remote RDP Jump Items, may duplicate this identifier.
            The combination of Jump Item Type + id uniquely identifies any Jump Item in the system.
        name:
          type: string
          maxLength: 128
          minLength: 1
          description: The name of the Shell Jump Item.
        jumpoint_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jumpoint through which connections are made.
        hostname:
          type: string
          maxLength: 128
          minLength: 1
          description: The hostname or IP address used to connect over SSH.
        protocol:
          type: string
          enum:
            - ssh
            - telnet
        port:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          default: "SSH: 22, Telnet: 23"
          description: The port to use for SSH or telnet. Must be between 1 and 65535, inclusive. Defaults to 22 if the protocol is SSH or 23 if the protocol is Telnet.
        jump_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Group or user that owns this Jump Item.
        jump_group_type:
          type: string
          enum: [shared, personal]
          description: The type of Jump Group that owns this Jump Item.
          default: shared
        terminal:
          type: string
          enum:
            - xterm
            - VT100
          default: xterm
          description: >
            One of the following:
              * xterm
              * VT100
        keep_alive:
          type: integer
          format: int32
          minimum: 0
          maximum: 300
          description: >
            The number of seconds between each packet sent to keep an idle session from ending.
            Must be between 0 and 300, inclusive. 0 disables keep-alive.
        tag:
          type: string
          minLength: 0
          maxLength: 64
          description: The Jump Item's tag.
        comments:
          type: string
          minLength: 0
          maxLength: 1024
          description: The Jump Item's comments.
        jump_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Policy used to manage access to this Jump Item.
        username:
          type: string
          maxLength: 128
          description: The default username that will be used to authenticate with the remote system. This is only used when credentials are not available from the ECM or Vault.
        session_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 2
          maximum: 2147483647
          description: The unique identifier of the Session Policy used to control the rep's capabilities in the session.
      required:
        - name
        - jumpoint_id
        - hostname
        - protocol
        - jump_group_id

    ApiAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this api account by the appliance.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: Name.
          readOnly: true
        comments:
          type: string
          maxLength: 4096
          minLength: 0
          description: Comments.
          readOnly: true
        enabled:
          type: boolean
          description: Enabled.
          readOnly: true
        ip_addresses:
          type: string
          description: Network Address Allow List.
          readOnly: true
        client_id:
          type: string
          maxLength: 40
          description: OAuth Client ID.
          readOnly: true
        failed_login_attempts:
          type: integer
          format: int32
          description: Consecutive Failed Logins.
          readOnly: true
        failed_login_expiration:
          type: string
          description: When the account lockout due to failed login attempts will expire.
          readOnly: true
        perm_command:
          type: string
          enum: [ deny, read_only, full_access ]
          description: Command API.
          readOnly: true
        perm_reporting_support:
          type: boolean
          description: Allow Access to Session Reports and Recordings.
          readOnly: true
        perm_reporting_presentation:
          type: boolean
          description: Allow Access to Presentation Session Reports and Recordings.
          readOnly: true
        perm_reporting_license:
          type: boolean
          description: Allow Access to License Usage Reports.
          readOnly: true
        perm_reporting_archive:
          type: boolean
          description: Allow Access to Archive Reports.
          readOnly: true
        perm_reporting_vault:
          type: boolean
          description: Allow Access to Vault Account Activity Reports.
          readOnly: true
        perm_reporting_syslog:
          type: boolean
          description: Allow Access to Syslog Reports.
          readOnly: true
        perm_backup:
          type: boolean
          description: Allow Access to the Backup API.
          readOnly: true
        perm_vault_backup:
          type: boolean
          description: Allow Vault Encryption Key Access.
          readOnly: true
        perm_real_time_state:
          type: boolean
          description: Allow Access to the Real-Time State API.
          readOnly: true
        perm_ecm:
          type: boolean
          description: Allow Access to the Endpoint Credential Manager API.
          readOnly: true
        perm_configuration:
          type: boolean
          description: Allow Access to the Configuration API.
          readOnly: true
        perm_configuration_vault_account:
          type: boolean
          description: Manage Vault Accounts.
          readOnly: true
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this user by the appliance.
        security_provider_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier of the security provider through which this user authenticates. This attribute is read-only. See Security Provider Configuration API.
        display_number:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The user's display number, which determines the order in which the user is shown in the Rep List on the Public Site. Autogenerated if not provided.
        username:
          type: string
          maxLength: 64
          minLength: 1
          description: The username the user last used to log in. This attribute is read-only for non-local users.
        password:
          type: string
          format: password
          maxLength: 255
          minLength: 1
          writeOnly: true
          description: >
            The local user's password. This attribute is write-only for local users. It cannot be
            set in non-local user PATCH requests. It is not returned in GET requests.
        public_display_name:
          type: string
          minLength: 1
          maxLength: 64
          description: The user's public display name. This attribute is read-only for users who belong to a security provider that synchronizes display names.
        private_display_name:
          type: string
          minLength: 1
          maxLength: 64
          description: The user's private display name. This attribute is read-only for users who belong to a security provider that synchronizes display names.
        password_expiration:
          type: string
          format: date-time
          nullable: true
          description: >
            The date and time at which the local user's password will expire as an RFC3339 date-time
            string. This attribute is only returned for local users and can only be updated on local
            users. If not set or set to a null or empty value, then the local user's password never
            expires.
        email_address:
          type: string
          minLength: 3
          maxLength: 255
          description: The user's email address. This attribute is read-only for users who belong to a security provider that synchronizes email addresses.
        preferred_email_language:
          type: string
          default: en-us
          maxLength: 10
          minLength: 2
          description: Must be the locale code for one of the locales listed on the Localization → Languages page.
        two_factor_required:
          type: boolean
          default: false
          description: >
            If true, this user must use two factor authentication via a TOTP application.
            If false, this user may opt-in to using two-factor authentication via a TOTP application.
            There is no way to prevent a user from opting in to two-factor authentication.
            This attribute is only available for local and LDAP users.
        enabled:
          type: boolean
          default: true
          description: True if this user is allowed to log in.
        last_authentication:
          type: string
          format: date-time
          description: The last date/time at which the user authenticated. This attribute is read-only.
          readOnly: true
        failed_logins:
          type: integer
          format: int32
          default: 0
          description: >
            The number of times this local user has failed to authenticate. This attribute is only
            returned for local users and can only be updated on local users. It is always 0 for new
            local users, so it is ignored in POST requests. You may set it to 0 in PATCH requests to
            unlock an account that has too many failed logins.
        password_reset_next_login:
          type: boolean
          default: false
          description: >
            If true, this local user's password must be reset on their next login. This attribute is
            only returned for local users and can only be set on local users.
        created_at:
          type: string
          format: date-time
          description: >
            The date/time at which this user resource was created. For non-local users, this
            time represents the time at which the user resource was added in Remote Support. It does not
            represent the time at which the user account was created in an external user store,
            such as an LDAP server.
          readOnly: true
        two_factor_enabled:
          type: boolean
          readOnly: true
          description: If true, this user has enabled two factor authentication.
        fido2_credential_count:
          type: integer
          format: int32
          readOnly: true
          description: The number of FIDO2 credentials registered for this user. (This field is only available if "Enable Passwordless FIDO2 Authentication" is enabled under Management -> security)
        fido2_last_used_date:
          type: string
          format: date-time
          readOnly: true
          description: The date and time at which the user last used a FIDO2 credential to authenticate. (This field is only available if "Enable Passwordless FIDO2 Authentication" is enabled under Management -> security)

        perm_admin:
          type: boolean
          description: Administrator.
          readOnly: true
        perm_set_passwords:
          type: boolean
          description: Allowed to Set Passwords.
          readOnly: true
        perm_admin_pushagents:
          type: boolean
          description: Allowed to Edit Jumpoints.
          readOnly: true
        perm_view_support_reports:
          type: string
          enum: [ "not_allowed", "user_sessions", "all_sessions", "team_sessions", "jump_group_sessions" ]
          description: Session Reporting Permissions.
          readOnly: true
        perm_view_presentation_reports:
          type: string
          enum: [ "not_allowed", "user_sessions", "all_sessions", "team_sessions", "jump_group_sessions" ]
          description: Allowed to View Presentation Session Reports.
          readOnly: true
        perm_view_vault_reports:
          type: string
          enum: [ "not_allowed", "view_user_events", "view_all_events" ]
          description: Allowed to View Vault Reports.
          readOnly: true
        perm_view_license_reports:
          type: boolean
          description: Allowed to View the License Usage Reports.
          readOnly: true
        perm_view_syslog_reports:
          type: boolean
          description: Allowed to View the Syslog Reports.
          readOnly: true
        perm_view_sd_recordings:
          type: boolean
          description: Allowed to view session recordings.
          readOnly: true
        perm_edit_ambush:
          type: boolean
          description: Allowed to Edit Customer Notices.
          readOnly: true
        perm_edit_jump_groups:
          type: boolean
          description: Allowed to Edit Jump Groups.
          readOnly: true
        perm_edit_public_template:
          type: boolean
          description: Allowed to Edit Public Site.
          readOnly: true
        perm_edit_public_file_store:
          type: boolean
          description: Allowed to Edit File Store.
          readOnly: true
        perm_edit_messages:
          type: boolean
          description: Allowed to Edit Canned Messages.
          readOnly: true
        perm_edit_sd_teams:
          type: boolean
          description: Allowed to Edit Teams.
          readOnly: true
        perm_edit_issues:
          type: boolean
          description: Allowed to Edit Issues.
          readOnly: true
        perm_edit_skills:
          type: boolean
          description: Allowed to Edit Skills.
          readOnly: true
        perm_edit_callback_button_profiles:
          type: boolean
          description: Allowed to Edit Support Button Profiles.
          readOnly: true
        perm_edit_canned_scripts:
          type: boolean
          description: Allowed to Edit Canned Scripts.
          readOnly: true
        perm_edit_custom_rep_links:
          type: boolean
          description: Allowed to Edit Custom Links.
          readOnly: true
        perm_edit_access_sponsors:
          type: boolean
          description: Allowed to Edit Access Sponsors.
          readOnly: true
        perm_change_display_name:
          type: boolean
          description: Allowed to Change Display Names.
          readOnly: true
        perm_change_rep_avatar:
          type: boolean
          description: Allowed to Change Rep Photo.
          readOnly: true
        perm_show_on_public_list:
          type: boolean
          description: Allowed to Show on Public Site.
          readOnly: true
        perm_support_allowed:
          type: string
          enum: [ "not_allowed", "full_support", "chat_support" ]
          description: Allowed to provide remote support.
          readOnly: true
        perm_share_other_team:
          type: boolean
          default: false
          description: Allowed to share sessions with teams which they do not belong to.
          readOnly: true
        perm_invite_external_rep:
          type: boolean
          default: false
          description: Allowed to invite external support Representatives.
          readOnly: true
        perm_extended_availability_mode_allowed:
          type: boolean
          default: false
          description: Allowed to enable extended availability mode.
          readOnly: true
        perm_edit_external_key:
          type: boolean
          default: false
          description: Allowed to edit the external key.
          readOnly: true
        perm_session_idle_timeout:
          type: integer
          format: int32
          default: -1
          minimum: -1
          maximum: 86400
          description: Remove Representative from the session after they've been inactive for a certain number of seconds. Allowed values are -1, 0, 300, 600, 900, 1800, 3600, 7200, 14400, 28800, 43200, and 86400. -1 means "Use site wide setting". 0 means "No timeout".
          readOnly: true
        perm_collaborate:
          type: boolean
          default: false
          description: Allowed to show screen to other Representatives.
          readOnly: true
        perm_collaborate_control:
          type: boolean
          default: false
          description: Allowed to give control when showing screen to other Representatives.
          readOnly: true
        perm_jump_client:
          type: boolean
          default: false
          description: Allowed to use Jump Clients.
          readOnly: true
        perm_local_jump:
          type: boolean
          default: false
          description: Allowed to use Local Jump (Windows only).
          readOnly: true
        perm_remote_jump:
          type: boolean
          default: false
          description: Allowed to use Remote Jump.
          readOnly: true
        perm_remote_vnc:
          type: boolean
          default: false
          description: Allowed to use Remote VNC.
          readOnly: true
        perm_remote_rdp:
          type: boolean
          default: false
          description: Allowed to use Remote RDP.
          readOnly: true
        perm_shell_jump:
          type: boolean
          default: false
          description: Allowed to use Shell Jump.
          readOnly: true
        default_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: Default Jump Item Role.
          readOnly: true
        private_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: Personal Jump Item Role.
          readOnly: true
        inferior_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: Teams Jump Item Role.
          readOnly: true
        unassigned_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: System Jump Item Role.
          readOnly: true
        perm_generate_session_key:
          type: boolean
          default: false
          description: Allowed to generate session keys for support sessions within the Representative Console.
          readOnly: true
        perm_send_ios_profiles:
          type: boolean
          default: false
          description: Allowed to generate access keys for sending iOS profiles.
          readOnly: true
        perm_accept_team_sessions:
          type: boolean
          default: false
          description: Allowed to manually accept sessions from a team queue.
          readOnly: true
        perm_transfer_other_team:
          type: boolean
          default: false
          description: Allowed to transfer sessions to teams which they do not belong to.
          readOnly: true
        perm_next_session_button:
          type: boolean
          default: false
          description: Allowed to use the Get Next Session feature.
          readOnly: true
        perm_disable_auto_assignment:
          type: boolean
          default: false
          description: Allowed to opt-out of session assignments.
          readOnly: true
        perm_routing_idle_timeout:
          type: integer
          format: int32
          default: 900
          minimum: 0
          maximum: 3600
          description: Do not assign sessions if the representative has been idle in seconds. Allowed values are 0, 180, 300, 600, 900, 1200, 1800, 2700, and 3600. 0 Means "No timeout".
          readOnly: true
        auto_assignment_max_sessions:
          type: integer
          format: int32
          default: 3
          minimum: 1
          maximum: 10
          description: Do not assign sessions if the representative is participating in more sessions.
          readOnly: true
        perm_support_button_personal_deploy:
          type: boolean
          default: false
          description: Allowed to deploy and manage Support Buttons in a personal queue.
          readOnly: true
        perm_support_button_team_manage:
          type: boolean
          default: false
          description: Allowed to manage Team Support Buttons.
          readOnly: true
        perm_support_button_change_public_sites:
          type: boolean
          default: false
          description: Allowed to change the Public Portal associated with Support Buttons.
          readOnly: true
        perm_support_button_team_deploy:
          type: boolean
          default: false
          description: Allowed to deploy Team Support Buttons.
          readOnly: true
        perm_local_vnc:
          type: boolean
          default: false
          description: Allowed to use Local VNC.
          readOnly: true
        perm_local_rdp:
          type: boolean
          default: false
          description: Allowed to use Local RDP.
          readOnly: true
        perm_vpro:
          type: boolean
          default: false
          description: Allowed to use Intel vPro.
          readOnly: true
        perm_console_idle_timeout:
          type: integer
          format: int32
          default: -1
          minimum: -1
          maximum: 86400
          description: Representative Console Idle Timeout in seconds. Allowed values are -1, 0, 300, 600, 900, 1800, 3600, 7200, 14400, 28800, 43200, and 86400. -1 means "Use site wide setting". 0 means "No timeout".
          readOnly: true
        perm_edit_iphone_content:
          type: boolean
          description: Allowed to Edit iOS Profiles.
          readOnly: true
        perm_pd_allowed:
          type: boolean
          description: Allowed to give presentations.
          readOnly: true
        perm_pd_control:
          type: boolean
          description: Allowed to grant control to a presentation attendee.
          readOnly: true
        perm_vault:
          type: boolean
          description: Allowed to Administer Vault.
          readOnly: true
      required:
        - public_display_name
        - private_display_name

    JumpGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Jump Group by the appliance.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The display name of the Jump Group.
        code_name:
          $ref: "#/components/schemas/CodeName"
        comments:
          type: string
          minLength: 0
          maxLength: 4096
          description: The Jump Group's comments.
          nullable: true
      required:
        - name

    JumpClient:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Jump Client by the appliance.
        jump_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the shared Jump Group or user that owns this Jump Client.
        jump_group_type:
          type: string
          enum: [shared, personal]
          default: shared
          description: The type of Jump Group that owns this Jump Client.
        name:
          type: string
          minLength: 1
          maxLength: 128
          description: The Jump Client's user-friendly name.
        hostname:
          type: string
          minLength: 1
          maxLength: 255
          readOnly: true
          description: The Jump Client's hostname (computer name).
        fqdn:
          type: string
          minLength: 1
          maxLength: 255
          readOnly: true
          description: The Jump Client's fully qualified domain name. This attribute is not available on all systems.
        tag:
          type: string
          minLength: 0
          maxLength: 64
          description: The Jump Client's tag.
        comments:
          type: string
          minLength: 0
          maxLength: 1024
          description: The Jump Client's comments.
        jump_policy_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Policy used to manage access to this Jump Item.
        attended_session_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 2
          maximum: 2147483647
          description: The session policy used when an end user is present on the Jump Client system.
        unattended_session_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 2
          maximum: 2147483647
          description: The session policy used when an end user is not present on the Jump Client system.
        public_site_address:
          type: string
          minLength: 1
          maxLength: 128
          default: The primary hostname configured on the builder when the software was built.
          description: One of the site addresses for one of the public sites configured on the Public Portals → Public Sites page.
        customer_client_start_mode:
          type: string
          enum: [normal, minimized, hidden]
          default: "normal"
          description: This setting determines how sessions are started from the deployed Jump Client. If normal, the customer client will start with the window visible. If minimized, it will start with the window minimized. If hidden, it will start with no visible customer window and will not appear in the taskbar.
        is_quiet:
          type: boolean
          default: false
          description: If true, sessions started from this Jump Client will start with the UI minimized to avoid disrupting logged in users.
        install_mode:
          type: string
          readOnly: true
          description: "The mode in which the Jump Client service was installed on the endpoint. Service mode means the Jump Client is running in an elevated security context."
          enum: [unknown, user, service]
        connection_type:
          type: string
          default: active
          readOnly: true
          description: "The type of connection maintained between the appliance and the Jump Client. Cloud deployments only allow active Jump Clients."
          enum: [active, passive, uninstalled]
        last_connect_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: The last time at which the Jump Client connected to the appliance.
        last_disconnect_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: The last time at which the Jump Client disconnected from the appliance. If empty then the Jump Client has never disconnected.
        is_lost:
          type: boolean
          readOnly: true
          description: "For active Jump Clients, this is true when the Jump Client has been disconnected for longer than the number of days configured for the "lost" setting on the /login → Jump → Jump Clients page. For passive Jump Clients, this is true when the Jump Client has not checked in for longer than the number of days configured for the "lost" setting on the /login → Jump → Jump Clients page."
        needs_update:
          type: boolean
          readOnly: true
          description: If true, this Jump Client is running an older version of the software and needs to be updated. Sessions cannot be started with this Jump Client until it is upgraded to the latest version.
        unavailable_reason:
          type: string
          readOnly: true
          description: "The reason why the Jump Client cannot be used to start sessions. Disabled indicates the end user disabled the Jump Client on their system."
          enum: [none, disabled]
        operating_system:
          type: string
          readOnly: true
          description: The name, version, and platform of the operating system on which the Jump Client is running.
        public_ip:
          type: string
          readOnly: true
          description: The public IP address of the system on which the Jump Client is running.
        private_ip:
          type: string
          readOnly: true
          description: The private IP address of the system on which the Jump Client is running.
        console_user:
          type: string
          readOnly: true
          description: The username of the user is logged on to the system on which the Jump Client is running.
        expiration_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: The date/time at which the Jump Client will automatically uninstall itself.
        max_offline_minutes:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
          description: The maximum number of minutes the Jump Client can be offline before being uninstalled. If 0, this Jump Client follows the global lost client settings.
        last_access_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: The last time at which this Jump Client was used to start a session.
      required:
        - jump_group_id

    JumpClientInstaller:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Jump Client Installer by the appliance.
        jump_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the shared Jump Group or user that owns this Jump Client.
        jump_group_type:
          type: string
          enum: [shared, personal]
          default: shared
          description: The type of Jump Group that owns this Jump Client.
        name:
          type: string
          minLength: 1
          maxLength: 128
          description: The Jump Client's user-friendly name.
        tag:
          type: string
          minLength: 0
          maxLength: 64
          description: The Jump Client's tag.
        comments:
          type: string
          minLength: 0
          maxLength: 1024
          description: The Jump Client's comments.
        jump_policy_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the Jump Policy used to manage access to this Jump Item.
        attended_session_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 2
          maximum: 2147483647
          description: The session policy used when an end user is present on the Jump Client system.
        unattended_session_policy_id:
          type: integer
          format: int32
          nullable: true
          minimum: 2
          maximum: 2147483647
          description: The session policy used when an end user is not present on the Jump Client system.
        public_site_address:
          type: string
          minLength: 1
          maxLength: 128
          default: The primary hostname configured on the builder when the software was built.
          description: One of the site addresses for one of the public sites configured on the Public Portals → Public Sites page.
        connection_type:
          type: string
          default: active
          description: "The type of connection maintained between the appliance and the Jump Client. Cloud deployments only allow active Jump Clients."
          enum: [active, passive]
        expiration_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: The date/time at which the Jump Client installer will no longer be valid.
        max_offline_minutes:
          type: integer
          format: int32
          minimum: 0
          maximum: 2147483647
          description: The maximum number of minutes the installed Jump Client can be offline before being uninstalled. If 0, the Jump Client will follow the global lost client settings.
        elevate_install:
          type: boolean
          default: true
          description: If true, the installer will attempt to elevate the Jump Client to make it run as a service.
        elevate_prompt:
          type: boolean
          default: true
          description: If true, the installer will prompt for elevation credentials if necessary. This parameter is ignored if elevate_install is false.
        is_quiet:
          type: boolean
          default: false
          readOnly: true
          description: If true, the customer client will start minimized when sessions are started from the deployed Jump Client.
        customer_client_start_mode:
          type: string
          enum: [normal, minimized, hidden]
          default: "normal"
          description: This setting determines how sessions are started from the deployed Jump Client. If normal, the customer client will start with the window visible. If minimized, it will start with the window minimized. If hidden, it will start with no visible customer window and will not appear in the taskbar.
        allow_override_jump_group:
          type: boolean
          default: false
          description: If true, the jump group can be specified during installation, which will override the jump group id specified in this API call.
        allow_override_jump_policy:
          type: boolean
          default: false
          description: If true, the jump policy can be specified during installation, which will override the jump policy id specified in this API call.
        allow_override_name:
          type: boolean
          default: false
          description: If true, the name can be specified during installation, which will override the name specified in this API call.
        allow_override_tag:
          type: boolean
          default: false
          description: If true, the tag can be specified during installation, which will override the tag specified in this API call.
        allow_override_comments:
          type: boolean
          default: false
          description: If true, the comments can be specified during installation, which will override the comments specified in this API call.
        allow_override_attended_session_policy:
          type: boolean
          default: false
          description: If true, the attended session policy can be specified during installation, which will override the value specified in this API call.
        allow_override_unattended_session_policy:
          type: boolean
          default: false
          description: If true, the unattended session policy can be specified during installation, which will override the value specified in this API call.
        installer_id:
          type: string
          minLength: 32
          maxLength: 32
          readOnly: true
          description: The unique installer identifier that can be used to download the installer for a specific platform.
        key_info:
          type: string
          minLength: 46
          maxLength: 46
          readOnly: true
          description: The information needed to deploy a Windows MSI installer. Only included in the response when creating a new installer.

    PublicPortal:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Public Portal.
        name:
          type: string
          maxLength: 255
          minLength: 1
          readOnly: true
          description: The name of the Public Portal.
        addresses:
          type: array
          default: []
          readOnly: true
          items:
            type: string
          description: >
            An array of addresses for the Public Portal.

    Team:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this team by the appliance.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The display name of the team.
        code_name:
          $ref: "#/components/schemas/CodeName"
        comments:
          type: string
          minLength: 0
          maxLength: 4096
          description: The team comments.
          nullable: true
        persistent_queue:
          type: boolean
          default: false
          description: If true, this team's queue will remain available even when no representatives are logged in to handle sessions in the queue.
        public_portal_ids:
          type: array
          default: ["All portals"]
          items:
            oneOf:
              - type: string
              - type: integer
          description: >
            An array of public IDs that the team has access to. The value 'all' will give the team access to all public sites.
      required:
        - name
    TeamUser:
      type: object
      properties:
        team_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the team to which this user has access.
        user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of the user who has access to the team.
        role:
          type: string
          enum: [member, lead, manager]
          default: member
      required:
        - team_id
        - user_id

    JumpItem:
      type: object
      properties:
        jump_group_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to a Jump Group.
        jump_group_type:
          type: string
          enum: [shared, personal]
          description: The type of Jump Group that owns this Jump Item.
        name:
          type: string
          maxLength: 128
          minLength: 1
          description: The name to be used in the new Jump Item.
      required:
        - jump_group_id
        - jump_group_type
        - name
    CopyJumpItemResponse:
      type: object
      properties:
        action:
          type: string
          description: The response when copying a Jump Item.
        success:
          type: string
          description: The result of the action performed. "1" means the Jump Item was successfully copied.
        destId:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to the new Jump Item.
    JumpItemRole:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Jump Item Role.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Jump Item Role.
        description:
          type: string
          maxLength: 4096
          description: The description of the Jump Item Role.
        perm_add:
          type: boolean
          default: false
          description: If true, users can create and deploy new Jump Items or upgrade Jump Clients.
        perm_assign_jump_group:
          type: boolean
          default: false
          description: If true, users can move or copy Jump Items from one Jump Group to another Jump Group.
        perm_remove:
          type: boolean
          default: false
          description: If true, users can delete Jump Items.
        perm_start:
          type: boolean
          default: false
          description: If true, users can start sessions with Jump Items.
        perm_edit_tag:
          type: boolean
          default: false
          description: If true, users can edit the Tag field on Jump Items.
        perm_edit_comments:
          type: boolean
          default: false
          description: If true, users can edit the Comments field on Jump Items.
        perm_edit_jump_policy:
          type: boolean
          default: false
          description: If true, users can edit the Jump Policy associated with Jump Items.
        perm_edit_session_policy:
          type: boolean
          default: false
          description: If true, users can edit the Session Policy associated with Jump Items.
        perm_edit_identity:
          type: boolean
          default: false
          description: >
            If true, users can edit all connectivity and authentication fields on Jump Items. This includes, but is not limited to: Name, Hostname, Jumpoint, Port, Protocol, and URL.
        perm_edit_behavior:
          type: boolean
          default: false
          description: >
            If true, users can edit all behavior and experience fields on Jump Items. This includes, but is not limited to: Connection Type, Quality, Console Session, Terminal Type.
        perm_view_jump_item_report:
          type: boolean
          default: false
          description: >
            If true, users can view Jump Item Report events for Jump Groups they are assigned to using this role.
        perm_edit_public_portal:
          type: boolean
          default: false
          description: If true, users can edit the Public Portal associated with Jump Items.

    Jumpoint:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Jumpoint by the appliance.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The display name of the Jumpoint.
        platform:
          type: string
          description: "The platform of the Jumpoint. This attribute cannot be modified after the Jumpoint is created."
          enum: [windows-x86, linux-x86]
        code_name:
          $ref: "#/components/schemas/CodeName"
        comments:
          type: string
          minLength: 0
          maxLength: 1024
          description: The Jumpoint's comments.
        enabled:
          type: boolean
          default: true
          description: If true, the Jumpoint is enabled.
        connected:
          type: boolean
          default: true
          readOnly: true
          description: If true, the Jumpoint is connected to the appliance.
        clustered:
          type: boolean
          default: false
          description: If true, the Jumpoint can have more than one node. This attribute cannot be modified after the Jumpoint is created.
        shell_jump_enabled:
          type: boolean
          default: false
          description: If true, users are allowed to start Shell Jump sessions with the Jumpoint.
        external_jump_item_network_id:
          type: string
          maxLength: 1024
          minLength: 0
          description: This field is only applicable when the option 'Allow Search for External Jump Items.' is Enabled in Management -> Security. The value must be unique if it is not empty.
      required:
        - name
        - platform
    JumpointNode:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Jumpoint node by the appliance.
        last_connect_timestamp:
          type: string
          format: date-time
          nullable: true
          description: The last time at which this node connected to the appliance. The time is in UTC.
        last_disconnect_timestamp:
          type: string
          format: date-time
          nullable: true
          description: The last time at which this node disconnected from the appliance. The time is in UTC.
        public_ip:
          type: string
          maxLength: 45
          minLength: 1
          description: The public IP address of the system on which the node is running.
        private_ip:
          type: string
          maxLength: 45
          minLength: 1
          description: The private IP address of the system on which the node is running.
        hostname:
          type: string
          maxLength: 255
          minLength: 1
          description: The hostname of the system on which the node is running.

    JumpointUser:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier of the user who has access to the Jumpoint.

    JumpPolicy:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Jump Policy by the appliance.
        display_name:
          type: string
          maxLength: 255
          minLength: 1
          description: The display name of the Jump Policy.
        code_name:
          type: string
          maxLength: 64
          minLength: 0
          pattern: '^[a-zA-Z0-9_\\-]+$'
          description: The code name of the Jump Policy.
        description:
          type: string
          maxLength: 1000
          description: The Jump Policy's comments.
        schedule_enabled:
          type: boolean
          default: true
          description: If true, users are restricted to accessing Jump Items within the scheduled hours.
        schedule_strict:
          type: boolean
          default: false
          description: If true, users are forcefully removed from sessions when the schedule does not permit access. This can only be set to true if schedule_enabled is also true.
        ticket_id_required:
          type: boolean
          default: false
          description: If true, users must enter a valid ticket ID that will be verified against the Ticket System configured on the Jump → Jump Policies page. This setting has no effect if a Ticket System is not configured.
      required:
        - display_name

    SessionPolicy:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Session Policy by the appliance.
        display_name:
          type: string
          maxLength: 255
          minLength: 1
          description: The display name of the Session Policy.
        code_name:
          type: string
          maxLength: 64
          minLength: 0
          pattern: '^[a-zA-Z0-9_\\-]+$'
          description: The code name of the Session Policy.
        description:
          type: string
          maxLength: 1024
          description: The Session Policy's comments.

    Schedule:
      type: object
      properties:
        timezone:
          type: string
          description: One of the timezone strings returned by the Timezone Configuration API.
        entries:
          type: array
          description: An array of schedule entries.
          default: []
          items:
            $ref: "#/components/schemas/ScheduleEntry"

    ScheduleEntry:
      type: object
      properties:
        start_day:
          type: integer
          description: "An integer representing a day of the week. Must be one of the following integers: 0 = Monday. 1 = Tuesday. 2 = Wednesday. 3 = Thursday. 4 = Friday. 5 = Saturday. 6 = Sunday."
          minimum: 0
          maximum: 6
        start_time:
          type: string
          description: "A string in the format 'HH:MM' representing a time of day: HH must be an integer in the range 0-23, inclusive, representing the hour of the day. MM must be an integer in the range 0-59, inclusive, representing the minute of the hour."
          pattern: ^\d\d:\d\d$
        end_day:
          type: integer
          description: "An integer representing a day of the week. Must be one of the following integers: 0 = Monday. 1 = Tuesday. 2 = Wednesday. 3 = Thursday. 4 = Friday. 5 = Saturday. 6 = Sunday."
          minimum: 0
          maximum: 6
        end_time:
          type: string
          description: "A string in the format 'HH:MM' representing a time of day: HH must be an integer in the range 0-23, inclusive, representing the hour of the day. MM must be an integer in the range 0-59, inclusive, representing the minute of the hour."
          pattern: ^\d\d:\d\d$

    VaultAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Account by the system.
        type:
          type: string
          enum: [username_password, ssh, ssh_ca, windows_local, windows_domain]
          readOnly: true
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Account.
        description:
          type: string
          maxLength: 4096
          description: The Account's description.
        personal:
          type: boolean
          description: Indicates if this is a personal account.
          readOnly: true
        owner_user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier of a user who owns the personal account.
        account_group_id:
          default: 1
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier the Vault Account Group. The `account_group_id` defaults to `1`, which is the default Account Group.
        account_policy:
          type: string
          maxLength: 64
          minLength: 1
          nullable: true
          description: The code name of the Account Policy associated with the account. When the value is `null`, the account policy is inherited from the account group. If there is no account group, it is inherited from the global default.
    VaultAccountGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Account Group by the system.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Account Group.
        description:
          type: string
          maxLength: 1024
          description: The Account Group's description.
        account_policy:
          type: string
          maxLength: 64
          minLength: 1
          nullable: true
          description: The code name of the Account Policy associated with the Account Group. When the value is `null`, the account policy is inherited from the global default.
    AccountJumpItemAssociation:
      type: object
      description: Describes Jump Item association criteria for Vault Accounts and Account Groups. The `criteria` property is only allowed if the `filter_type` is "criteria".
      properties:
        filter_type:
          type: string
          enum: [any_jump_items, no_jump_items, criteria]
          description: |
            The following values are allowed:

            - `any_jump_items`: The account(s) can be injected within any session started from a Jump Item where the account(s) is/are applicable.
            - `no_jump_items`: The account(s) cannot be injected into any session started from a Jump Item.
            - `criteria`: The account(s) can be injected only within sessions started from Jump Items that match the criteria you define, where the account is applicable. This uses the given `criteria` and `jump_items` to identify which Jump Items the applicable account(s) should be associated with.
        criteria:
          $ref: "#/components/schemas/AccountJumpItemAssociationCriteria"
        jump_items:
          type: array
          description: Array of identifiers for Jump Items that should be directly associated with the account(s).
          items:
            $ref: "#/components/schemas/AccountInjectableJumpItem"
      required:
        - filter_type

    AccountJumpGroupAssociationItem:
      type: object
      description: Describes Jump Group association criteria for Vault Accounts and Account Groups.
      properties:
        shared_jump_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to the shared Jump Group by the system.
      required:
        - shared_jump_group_id

    AccountJumpGroupAssociationResponse:
      type: object
      description: Describes Jump Group association criteria for Vault Accounts Groups.
      properties:
        shared_jump_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to the shared Jump Group by the system.
        account_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to the Vault Account Group.
      required:
        - account_group_id
        - shared_jump_group_id

    AccountJumpItemAssociationCriteria:
      type: object
      description: All items in host, name, tag and comment will be converted to lowercase.
      properties:
        shared_jump_groups:
          type: array
          description: Array of shared Jump Group ids.
          items:
            $ref: "#/components/schemas/ObjectId"
        host:
          type: array
          description: Array of patterns matched against the value that appears in the "Hostname/IP" column of the Jump Item in the Representative Console.
          minItems: 0
          maxItems: 32
          items:
            $ref: "#/components/schemas/AccountJumpItemAssociationCriteriaPattern"
        name:
          type: array
          description: Array of patterns matched against the value that appears in the "Name" column of the Jump Item in the Representative Console.
          minItems: 0
          maxItems: 32
          items:
            $ref: "#/components/schemas/AccountJumpItemAssociationCriteriaPattern"
        tag:
          type: array
          description: Array of patterns matched against the value that appears in the "Tag" column of the Jump Item in the Representative Console.
          minItems: 0
          maxItems: 32
          items:
            $ref: "#/components/schemas/AccountJumpItemAssociationCriteriaPattern"
        comment:
          type: array
          description: Array of patterns matched against the value that appears in the "Comments" column of the Jump Item in the Representative Console.
          minItems: 0
          maxItems: 32
          items:
            $ref: "#/components/schemas/AccountJumpItemAssociationCriteriaPattern"

    AccountInjectableJumpResponse:
      type: object
      description: Identifies a Jump Item that Vault accounts can be injected into.
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to this Jump Item by the system.
        account_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to the Vault Account Group.
        type:
          type: string
          description: If you use the `protocol_tunnel` option, only SQL Server Tunnels are allowed.
          enum: [jump_client, remote_rdp, shell_jump]
      required:
        - id
        - type

    AccountInjectableJumpItem:
      type: object
      description: Identifies a Jump Item that Vault accounts can be injected into.
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to this Jump Item by the system.
        type:
          type: string
          enum: [ jump_client, remote_rdp, shell_jump ]
      required:
        - id
        - type

    AccountJumpItemAssociationCriteriaPattern:
      type: string
      description: |
        A simple pattern string in one of the following forms:

        - `value`: matches the field exactly.
        - `value*`: matches the field as a prefix.
        - `*value`: matches the field as a suffix.
        - `*value*`: matches if the field contains the value.

        An array of multiple values indicates that the field can match *any* of the values. All pattern matching is case-insensitive.
      minLength: 1
      maxLength: 64

    VaultAccountPolicy:
      type: object
      required:
        - name
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Account Policy by the system.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Account Policy.
        code_name:
          type: string
          maxLength: 64
          minLength: 0
          description: The code name of the Account Policy.
        description:
          type: string
          maxLength: 1024
          description: The Account Policy's description.
        auto_rotate_credentials:
          type: boolean
          description: If enabled, the system will change the account's password after it is checked in.
        allow_simultaneous_checkout:
          type: boolean
          description: If enabled, the vault account can be checked out and used by multiple users or sessions at the same time.
        scheduled_password_rotation:
          type: boolean
          description: If enabled, the system will automatically rotate an account password when it reaches the specified maximum age.
        maximum_password_age:
          type: integer
          format: int32
          minimum: 1
          maximum: 365
          description: The amount of time in days before the system automatically rotates an account password when `scheduled_password_rotation` is enabled. When creating a new account policy with `scheduled_password_rotation` as enabled, this value must be defined. If `scheduled_password_rotation` is null or false, this value is also null and not required.
    GroupPolicy:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this group policy by the system.
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the group policy.
        perm_support_allowed:
          type: string
          default: "not_allowed"
          enum: [ "not_allowed", "full_support", "chat_support" ]
          description: Allowed to provide remote support.
        rep_perm_status:
          type: string
          enum: [ "not_defined", "defined", "final" ]
          description: This field indicates if this policy defines representative permissions or not. A value of "defined" means the policy defines values for representative permissions. A value of "final" is the same as defined, except it will also prevent other policies of lower priority from overriding the permission value set by this Policy. The default value is "defined" if the request includes any representative permission fields; otherwise the default is "not_defined".
        perm_generate_session_key:
          type: boolean
          default: false
          description: Allowed to generate session keys for support sessions within the Representative Console.
        perm_send_ios_profiles:
          type: boolean
          default: false
          description: Allowed to generate access keys for sending iOS profiles.
        perm_accept_team_sessions:
          type: boolean
          default: false
          description: Allowed to manually accept sessions from a team queue.
        perm_transfer_other_team:
          type: boolean
          default: false
          description: Allowed to transfer sessions to teams which they do not belong to.
        perm_share_other_team:
          type: boolean
          default: false
          description: Allowed to share sessions with teams which they do not belong to.
        perm_invite_external_rep:
          type: boolean
          default: false
          description: Allowed to invite external support Representatives.
        perm_session_idle_timeout:
          type: integer
          format: int32
          default: -1
          minimum: -1
          maximum: 86400
          description: Remove Representative from the session after they've been inactive for a certain number of seconds. Allowed values are -1, 0, 300, 600, 900, 1800, 3600, 7200, 14400, 28800, 43200, and 86400. -1 means "Use site wide setting". 0 means "No timeout".
        perm_next_session_button:
          type: boolean
          default: false
          description: Allowed to use the Get Next Session feature.
        perm_extended_availability_mode_allowed:
          type: boolean
          default: false
          description: Allowed to enable extended availability mode.
        perm_edit_external_key:
          type: boolean
          default: false
          description: Allowed to edit the external key.
        perm_disable_auto_assignment:
          type: boolean
          default: false
          description: Allowed to opt-out of session assignments.
        perm_routing_idle_timeout:
          type: integer
          format: int32
          default: 900
          minimum: 0
          maximum: 3600
          description: Do not assign sessions if the representative has been idle in seconds. Allowed values are 0, 180, 300, 600, 900, 1200, 1800, 2700, and 3600. 0 Means "No timeout".
        auto_assignment_max_sessions:
          type: integer
          format: int32
          default: 3
          minimum: 1
          maximum: 10
          description: Do not assign sessions if the representative is participating in more sessions.
        perm_collaborate:
          type: boolean
          default: false
          description: Allowed to show screen to other Representatives.
        perm_collaborate_control:
          type: boolean
          default: false
          description: Allowed to give control when showing screen to other Representatives.
        perm_support_button_personal_deploy:
          type: boolean
          default: false
          description: Allowed to deploy and manage Support Buttons in a personal queue.
        perm_support_button_team_manage:
          type: boolean
          default: false
          description: Allowed to manage Team Support Buttons.
        perm_support_button_change_public_sites:
          type: boolean
          default: false
          description: Allowed to change the Public Portal associated with Support Buttons.
        perm_support_button_team_deploy:
          type: boolean
          default: false
          description: Allowed to deploy Team Support Buttons.
        perm_jump_client:
          type: boolean
          default: false
          description: Allowed to use Jump Clients.
        perm_local_jump:
          type: boolean
          default: false
          description: Allowed to use Local Jump (Windows only).
        perm_remote_jump:
          type: boolean
          default: false
          description: Allowed to use Remote Jump.
        perm_remote_vnc:
          type: boolean
          default: false
          description: Allowed to use Remote VNC.
        perm_remote_rdp:
          type: boolean
          default: false
          description: Allowed to use Remote RDP.
        perm_shell_jump:
          type: boolean
          default: false
          description: Allowed to use Shell Jump.
        perm_local_vnc:
          type: boolean
          default: false
          description: Allowed to use Local VNC.
        perm_local_rdp:
          type: boolean
          default: false
          description: Allowed to use Local RDP.
        perm_vpro:
          type: boolean
          default: false
          description: Allowed to use Intel vPro.
        default_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: Default Jump Item Role.
        private_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: Personal Jump Item Role.
        inferior_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: Teams Jump Item Role.
        unassigned_jump_item_role_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: System Jump Item Role.
        perm_console_idle_timeout:
          type: integer
          format: int32
          default: -1
          minimum: -1
          maximum: 86400
          description: Representative Console Idle Timeout in seconds. Allowed values are -1, 0, 300, 600, 900, 1800, 3600, 7200, 14400, 28800, 43200, and 86400. -1 means "Use site wide setting". 0 means "No timeout".
      required:
        - name
    GroupPolicyJumpoint:
      type: object
      properties:
        jumpoint_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to the Jumpoint by the system.
    VaultUsernamePasswordAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Account by the system.
        type:
          type: string
          enum: [username_password]
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Account.
        username:
          type: string
          maxLength: 255
          minLength: 1
          description: The username that will be injected and/or checked out.
        password:
          type: string
          maxLength: 255
          minLength: 1
          description: The password that will be injected and/or checked out.
          writeOnly: true
        description:
          type: string
          maxLength: 4096
          description: The Account's description.
        last_checkout_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: When the account was last checked out. Not returned for personal accounts.
        personal:
          type: boolean
          description: Indicates if this is a personal account.
          readOnly: true
        owner_user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier of a user who owns the personal account.
        account_group_id:
          default: 1
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier the Vault Account Group. The `account_group_id` defaults to `1`, which is the default Account Group.
        account_policy:
          type: string
          maxLength: 64
          minLength: 1
          nullable: true
          description: The code name of the Account Policy associated with the account. When the value is `null`, the account policy is inherited from the account group. If there is no account group, it is inherited from the global default.
      required:
        - type
        - name
        - username
        - password

    VaultSSHAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Account by the system.
        type:
          type: string
          enum: [ssh, ssh_ca]
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Account.
        username:
          type: string
          maxLength: 255
          minLength: 1
          description: The username that will be injected and/or checked out.
        public_key:
          type: string
          minLength: 1
          maxLength: 4096
          description: The public SSH key for the stored private key.
          readOnly: true
        private_key:
          type: string
          minLength: 1
          maxLength: 4096
          description: The private SSH key that will be injected by reps.
          writeOnly: true
        private_key_passphrase:
          type: string
          minLength: 1
          maxLength: 1024
          description: The passphrase used to unlock the private key.
          writeOnly: true
        private_key_public_cert:
          type: string
          minLength: 1
          maxLength: 4096
          description: The public certificate used for authentication.
        description:
          type: string
          maxLength: 4096
          description: The Account's description.
        last_checkout_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: When the account was last checked out. Not returned for personal accounts.
        personal:
          type: boolean
          description: Indicates if this is a personal account.
          readOnly: true
        owner_user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier of a user who owns the personal account.
        account_group_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: The unique identifier the Vault Account Group. The `account_group_id` defaults to `1`, which is the default Account Group.
      required:
        - type
        - name
        - username
        - private_key

    VaultDomainAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Account by the system.
        type:
          type: string
          enum: [windows_domain]
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Account.
        username:
          type: string
          maxLength: 255
          minLength: 1
          description: The username that will be injected and/or checked out.
        description:
          type: string
          maxLength: 4096
          description: The Account's description.
        last_checkout_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: When the account was last checked out.
        account_group_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: The unique identifier the Vault Account Group. The `account_group_id` defaults to `1`, which is the default Account Group.
        account_policy:
          type: string
          maxLength: 64
          minLength: 1
          description: The code name of the Account Policy associated with the account. When the value is `null`, the account policy is inherited from the account group. If there is no account group, it is inherited from the global default.
        is_management:
          type: boolean
          description: Indicates this is a domain management acocunt.
        unique_id:
          type: string
          description: The GUID of the Active Directory object that represents the domain account.
        distinguished_name:
          type: string
          description: The distinguished name of the account.
        sam_account_name:
          type: string
          description: The down level logon name of the account.
        service_principal_name:
          type: string
          description: A unique identifier of a service instance used by Kerberos authentication to associate a service instance with a service logon account.
        azure_ad_object_id:
          type: string
          description: GUID used to manage account in MS Graph. Empty if account not managed by MS Graph.
      required:
        - type
        - name
        - username

    VaultLocalAccount:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Account by the system.
        type:
          type: string
          enum: [windows_local]
        name:
          type: string
          maxLength: 255
          minLength: 1
          description: The name of the Account.
        username:
          type: string
          maxLength: 255
          minLength: 1
          description: The username that will be injected and/or checked out.
        description:
          type: string
          maxLength: 4096
          description: The Account's description.
        last_checkout_timestamp:
          type: string
          format: date-time
          readOnly: true
          description: When the account was last checked out.
        account_group_id:
          type: integer
          format: int32
          default: 1
          minimum: 1
          maximum: 2147483647
          description: The unique identifier the Vault Account Group. The `account_group_id` defaults to `1`, which is the default Account Group.
        account_policy:
          type: string
          maxLength: 64
          minLength: 1
          description: The code name of the Account Policy associated with the account. When the value is `null`, the account policy is inherited from the account group. If there is no account group, it is inherited from the global default.
        sid:
          type: string
          maxLength: 128
          minLength: 1
          description: SID of the account.
        endpoint_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: Id of the Endpoint.
      required:
        - type
        - name
        - username

    VaultAccountUser:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to the account by the system.
        role:
          type: string
          description: >
            The role that user will have on the Vault account. Must be one of the following:
          enum:
            - inject
            - inject_and_checkout

    VaultAccountCredential:
      type: object
      properties:
        username:
          type: string
          maxLength: 255
          minLength: 1
          description: The username of the checked out account.
        type:
          type: string
          enum: [username_password, ssh, ssh_ca, windows_local, windows_domain]
        password:
          type: string
          minLength: 1
          description: The password of the checked out account.
        private_key:
          type: string
          minLength: 1
          description: The private key of the checked out account.
        signed_public_cert:
          type: string
          minLength: 1
          description: The signed public certificate, if one was generated upon check out.

    VaultEndpoint:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Endpoint by the system.
        name:
          type: string
          maxLength: 128
          minLength: 1
          description: The name of the Endpoint.
        operating_system:
          type: string
          readOnly: true
          description: The operating system of the Endpoint.
        domain_name:
          type: string
          readOnly: true
          maxLength: 128
          description: The domain name of the Endpoint.
        distinguished_name:
          type: string
          readOnly: true
          description: The distinguished name of the Endpoint.
        hostname:
          type: string
          maxLength: 128
          minLength: 1
          description: The hostname of the Endpoint.
        description:
          type: string
          maxLength: 1024
          description: The Endpoint's description.

    SecurityProvider:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to this Security Provider.
        type:
          type: string
          readOnly: true
          enum:
            - local
            - ldap
            - radius
            - kerberos
            - saml
            - saml_portal
          description: |
            The type of security provider. Must be one of the following:

            - `local`: the local security provider authenticates users whose credentials are stored in Remote Support
            - `ldap`: an LDAP security provider (Active Directory, eDirectory, OpenLDAP, etc.)
            - `radius`: a RADIUS security provider
            - `kerberos`: a Kerberos security provider
            - `saml`: a SAML 2.0 security provider
            - `saml_portal`: a SAML 2.0 for Public Portals security provider
        name:
          type: string
          readOnly: true
          maxLength: 255
          minLength: 1
          description: The name of the Security Provider.
        enabled:
          readOnly: true
          type: boolean
          description: If true, the security provider is used for authentication and group lookup.
        user_authentication:
          readOnly: true
          type: boolean
          description: If true, this security provider authenticates users.
        group_lookup:
          readOnly: true
          type: boolean
          description: If true, this security provider looks up user groups.

    GroupPolicyMember:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to a member.
        security_provider_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to a security provider.
        distinguished_name:
          type: string
          minimum: 1
          maximum: 1024
          description: The distinguished name (DN) of the LDAP user, organizational unit (OU), or container. This attribute is only present for users and groups belonging to LDAP security providers.
        group_name:
          type: string
          minimum: 1
          maximum: 64

          description: The name of the SAML group. This attribute is only available for SAML groups, as determined by the security_provider_id.
        user_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier of a local, LDAP, RADIUS, Kerberos, or SAML user.
    GroupPolicyJumpGroup:
      type: object
      properties:
        jump_group_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to a Jump Group.
        jump_item_role_id:
          type: integer
          minimum: 0
          maximum: 2147483647
          description: The unique identifier assigned to a Jump Item Role or 0 meaning "User's Default".
    GroupPolicyVaultAccount:
      type: object
      properties:
        account_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to a Vault Account.
        role:
          type: string
          description: >
            The role that members of this Group Policy will have on the Vault Account. Must be one of the following:
          enum:
            - inject
            - inject_and_checkout
          default: inject
      required:
        - account_id
    GroupPolicyVaultAccountGroup:
      type: object
      properties:
        group_policy_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to a Group Policy.
        account_group_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to a Vault Account Group.
        role:
          type: string
          description: >
            The role that members of the Group Policy will have on the Vault Account Group. Must be one of the following:
          enum:
            - inject
            - inject_and_checkout
          default: inject
      required:
        - account_group_id
    GroupPolicyTeam:
      type: object
      properties:
        team_id:
          type: integer
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to a team.
        role:
          type: string
          description: The role that members of this group policy will have on the team.
          enum:
            - member
            - lead
            - manager
          default: member
      required:
        - team_id
    JumpGroupUser:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to the user by the system.
        jump_item_role_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to the Jump Item Role by the system.
    VaultAccountGroupAccount:
      type: object
      properties:
        account_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to the account by the system.
        account_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to the account group by the system.
    VaultAccountGroupUser:
      type: object
      properties:
        user_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          description: The unique identifier assigned to the account by the system.
        account_group_id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to the account group by the system.
        role:
          type: string
          description: >
            The role that user will have on the Vault account group. Must be one of the following:
          enum:
            - inject
            - inject_and_checkout
          default: inject

    RepStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier assigned to the vendor group by the system.
        name:
          type: string
          minLength: 1
          maxLength: 64
          description: The name of the rep status configured.
        code_name:
          $ref: "#/components/schemas/CodeName"
        display_as:
          type: string
          enum: [away, busy]
          description: The state of the rep status configured.

    ExtendedSecurityProvider:
      allOf:
        - $ref: "#/components/schemas/SecurityProvider"
        - type: object
          properties:
            priority:
              type: integer
              format: int32
              minimum: 0
              maximum: 2147483647
              readOnly: true
              description: The priority of the Security Provider.
            default_policy:
              type: integer
              format: int32
              minimum: 0
              maximum: 2147483647
              readOnly: true
              description: |
                The selected Group Policy will define the initial and the default set of permissions, memberships, and other settings to all users authenticating with this Security Provider.
                These settings can be modified individually per user or group of users if they belong to other Group Policies.
    LocalSecurityProvider:
      allOf:
        - $ref: "#/components/schemas/ExtendedSecurityProvider"
    LDAPSecurityProvider:
      allOf:
        - $ref: "#/components/schemas/ExtendedSecurityProvider"
        - type: object
          properties:
            auth_provider:
              type: boolean
              readOnly: true
              description: Indicates this provider is used for user authentication.
            ldap_cache:
              type: boolean
              readOnly: true
              description: |
                Cached data will be used for adding members to Group Policies and no connection will be made to the LDAP server for searching or browsing the LDAP tree.
                A new sync is required in order to make changes visible in Remote Support any time objects are modified on the LDAP server.
                Data is automatically synchronized once every 24 hours.
            anonymous_bind:
              type: boolean
              readOnly: true
              description: Anonymous bind.
            ldap_search:
              type: number
              format: int32
              readOnly: true
              description: |
                The search method used for searching available members for this provider in group policies.
                1 Means Prefix Search.
                3 Means Substring Search.
            proxy:
              type: boolean
              readOnly: true
              description: Proxy from appliance through the Connection Agent.
            search_base_dn:
              type: string
              readOnly: true
              description: User schema settings search Base DN.
            user_query:
              type: string
              readOnly: true
              description: LDAP filter to locate a user in LDAP by their username.
            browse_query:
              type: string
              readOnly: true
              description: This is useful if the base DN contains a large number of child objects. If not specified, all objects are returned.
            unique_id:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: The attribute which the value matches the UniqueIDs on the other provider.
            display_name:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: The attribute which the value matches the Display Name on the other provider. This value is only valid when auth_provider is true.
            email:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: The attribute which the value matches the E-mail on the other provider. This value is only valid when auth_provider is true.
            username:
              type: string
              readOnly: true
              description: Username to connect to LDAP server.
            paged_search_timeout:
              type: integer
              format: int32
              minimum: 600000
              maximum: 36000000
              readOnly: true
              description: Paged Search Timeout in milliseconds. Only valid if ldap_search 3 ("Substring Search").
            hostname:
              type: string
              readOnly: true
              description: Hostname of LDAP Server.
            port:
              type: integer
              format: int32
              minimum: 1
              maximum: 65535
              readOnly: true
              description: TCP Port of LDAP Server.
            encryption:
              type: integer
              enum: [0, 1, 2]
              readOnly: true
              description: Encryption type for the LDAP protocol. 0 is None, 1 LDAPS, 2 LDAP with TLS
            recursive_groups:
              type: boolean
              readOnly: true
              description: Perform recursive search for groups. Only valid if group_lookup is true.
            object_classes:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: Only objects with at least one of these object classes will be considered a valid user.
            group_relationships:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: |
                User to Group Relationships. Each relationship is in the form memberObjectClass:attributeName = groupObjectClass:attributeName.
                Only valid if group_lookup is true.
                When lookup_group is true this field must have at least 1 element.
            photo:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: The attribute which the value matches the Photo of the user. Photos must be in the JPEG format and stored as either raw binary data or Base64 encoded data.
            group_schema_object_classes:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: Only groups with at least one of these object classes will be considered a valid group. Only valid if lookup_groups is 1.
            group_schema_browse_query:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: LDAP filter to locate a User Group. Only valid if lookup_groups is 1.
            group_schema_base_dn:
              type: string
              readOnly: true
              description: Search base DN to User Groups. Only valid if lookup_groups is 1.
            group_display_name:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: The attribute which the value matches the Display Name. Only valid if lookup_groups is 1.
            sync_display_name:
              type: boolean
              readOnly: true
              description: Keep display name synchronized with remote system.
    SAMLSecurityProvider:
      allOf:
        - $ref: "#/components/schemas/ExtendedSecurityProvider"
        - type: object
          properties:
            group_lookup_attribute_name:
              type: string
              readOnly: true
              description: |
                Name or Names of groups to which users should belong.
                If the attribute value contains multiple group names, then specify the delimiter used to separate their names.
                If left blank, SAML users must be manually assigned to group policies after their first successful authentication.
            available_groups:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: false
              description: |
                This is an optional list of SAML groups always available to be manually assigned to group policies in Remote Support.
                If left blank, a given SAML group will be made available only after the first successful authentication of a user member of such group.
            display_name:
              type: string
              readOnly: true
              description: The display name for the Users. If multiple SAML attributes are used to populate a single user attribute, then surround each SAML attribute name with braces.
            email:
              type: string
              readOnly: true
              description: E-mail SAML attribute.
            user_name:
              type: string
              readOnly: true
              description: Username SAML attribute.
            login_url:
              type: string
              readOnly: true
              description: Single Sign-On Service URL.
            sp_entity_id:
              type: string
              readOnly: true
              description: Service provider Entity ID.
            entity_id:
              type: string
              readOnly: true
              description: Service provider SAML attribute.
            group_delimiter:
              type: string
              readOnly: true
              description: Delimiter for group_lookup_attribute_name. If the delimiter is left blank, then the attribute value may contain multiple XML nodes with each one containing a different name.
            case_insensitive_name_ids:
              type: boolean
              readOnly: true
              description: Use case-insensitive comparison for NameIDs.
            sso_url_protocol_binding:
              readOnly: true
              type: string
              enum:
                - HTTP Redirect
                - HTTP POST
            sync_display_name:
              type: boolean
              readOnly: true
              description: The display names will be set according to the User Schema Settings.
    SAMLForPublicPortalsSecurityProvider:
      allOf:
        - $ref: "#/components/schemas/ExtendedSecurityProvider"
        - type: object
          properties:
            display_name:
              type: string
              readOnly: true
              description: The display name for the Users. If multiple SAML attributes are used to populate a single user attribute, then surround each SAML attribute name with braces.
            email:
              type: string
              readOnly: true
              description: E-mail SAML attribute.
            user_name:
              type: string
              readOnly: true
              description: Username SAML attribute.
            login_url:
              type: string
              readOnly: true
              description: Single Sign-On Service URL.
            sp_entity_id:
              type: string
              readOnly: true
              description: Service provider Entity ID.
            entity_id:
              type: string
              readOnly: true
              description: Service provider SAML attribute.
            sso_url_protocol_binding:
              readOnly: true
              type: string
              enum:
                - HTTP Redirect
                - HTTP POST
    RadiusSecurityProvider:
      allOf:
        - $ref: "#/components/schemas/ExtendedSecurityProvider"
        - type: object
          properties:
            allowed_users:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: false
              description: This is an optional list of users to allow login.
            hostname:
              type: string
              readOnly: true
              description: Hostname of RADIUS Server.
            port:
              type: number
              format: int32
              readOnly: true
              minimum: 1
              maximum: 65535
              description: TCP Port of RADIUS Server.
            timeout:
              type: number
              format: int32
              readOnly: true
              minimum: 1
              maximum: 180
              description: Timeout in seconds.
            external_lookup:
              type: array
              minItems: 0
              items:
                type: integer
                format: int32
                minimum: 1
                maximum: 2147483647
              readOnly: true
              description: This is an optional list of unique identifier of the LDAP Group Providers.
            sync_display_name:
              type: boolean
              readOnly: true
              description: The display name will be set to the User-Name attribute in the Access-Request message.
    KerberosSecurityProvider:
      allOf:
        - $ref: "#/components/schemas/ExtendedSecurityProvider"
        - type: object
          properties:
            sync_display_name:
              type: boolean
              readOnly: true
              description: |
                Keep display name synchronized with remote system.
                The display name will be set to the User Principal Name in the users' ticket.
            strip_realm:
              type: boolean
              readOnly: true
              description: |
                Indicates that the realm will be stripped from the principal names.
                After successfully authenticating, the REALM portion will be stripped from the User Principal Name when constructing the username and (optionally) the display name.
                A User Principal Name in the form of user@REALM will result in "user" being used for the username.
                This setting also carries over to any configured Group Providers, with the username that is looked up set to "user"
            user_mode:
              type: number
              format: int32
              minimum: 0
              maximum: 2
              readOnly: true
              description: |
                User Handling Mode.
                0 Means Allow all users.
                1 Means Allow only user principals specified in the list.
                2 Allow only user principals that match the regex.
            allowed_users:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: This is an optional list of user principals. Only valid when the user_mode is 1.
            allowed_users_regex:
              type: string
              readOnly: true
              description: PCRE compatible regular expression to validate user principals. Only valid when the user_mode is 2.
            spn_mode:
              type: boolean
              readOnly: true
              description: Allow only SPNs specified.
            allowed_spns:
              type: array
              minItems: 0
              items:
                type: string
              readOnly: true
              description: This is an optional list of SPN's to allow. Only valid when the spn_mode is enabled.
            external_lookup:
              type: array
              minItems: 0
              items:
                type: integer
                format: int32
                minimum: 1
                maximum: 2147483647
              readOnly: true
              description: This is an optional list of unique identifier of the LDAP Group Providers.
    RemoteRdpCandidate:
      type: object
      properties:
        id:
          type: integer
          format: int32
          minimum: 1
          maximum: 2147483647
          readOnly: true
          description: The unique identifier for the Remote RDP Jump Item.
  parameters:
    IdParam:
      name: id
      in: path
      description: Unique identifier for the resource.
      required: true
      schema:
        $ref: "#/components/schemas/ObjectId"
    GroupPolicyIdParam:
      name: id
      in: path
      description: Unique identifier for the group policy.
      required: true
      schema:
        $ref: "#/components/schemas/ObjectId"
    JumpointIdParam:
      name: id
      in: path
      description: Unique identifier for the Jumpoint.
      required: true
      schema:
        $ref: "#/components/schemas/ObjectId"
    UserIdParam:
      name: user_id
      in: path
      description: Unique identifier for the user.
      required: true
      schema:
        $ref: "#/components/schemas/ObjectId"
    PerPageParam:
      name: per_page
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/PerPage"
      description: The number of items to include a paginated response.
    CurrentPageParam:
      name: current_page
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/CurrentPage"
      description: The 1-based index of the desired page.
    CodeNameParam:
      name: code_name
      in: query
      description: Filters a response to include only resources with the given code name.
      schema:
        $ref: "#/components/schemas/CodeName"

  headers:
    Link:
      description: In a paginated response, this header provides URLs for first, next, previous, and last pages for the current resource type and the given request parameters.
      schema:
        type: string
        example: |
          (Newlines added for readability.)

          Link: <https://example.beyondtrust.com/api/config/user?per_page=10&current_page=1>; rel="first",
          <https://example.beyondtrust.com/api/config/user?per_page=10&current_page=6>; rel="previous",
          <https://example.beyondtrust.com/api/config/user?per_page=10&current_page=7>; rel="last"
    X-BT-Pagination-Current-Page:
      description: Indicates the 1-based page number for a paginated response.
      schema:
        $ref: "#/components/schemas/CurrentPage"
    X-BT-Pagination-Per-Page:
      description: Indicates the maximum number of resources a paginated response's pages will contain.
      schema:
        $ref: "#/components/schemas/PerPage"
    X-BT-Pagination-Last-Page:
      description: Indicates the 1-based number for a paginated response's last page.
      schema:
        type: integer
        minimum: 1
    X-BT-Pagination-Total:
      description: Indicates the total number of resources that satisfy the given request parameters.
      schema:
        type: integer
        minimum: 0


  responses:
    404NotFound:
      description: The specified resource was not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorMessageResponse"
    422UnprocessableEntity:
      description: One or more request parameters are invalid. The body contains a general error message as well as a validation error dictionary.
      content:
        application/json:
          schema:
            allOf:
              - $ref: "#/components/schemas/ErrorMessageResponse"
              - properties:
                  errors:
                    $ref: "#/components/schemas/ErrorBagResponse"

  securitySchemes:
    api_account_auth:
      type: oauth2
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: https://example.beyondtrust.com/oauth2/token
